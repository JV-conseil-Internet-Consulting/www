{"version":3,"file":"vendors-node_modules_rxjs_dist_esm5_internal_observable_combineLatest_js-node_modules_rxjs_di-7f5a75-deepdive-9.1.7.min.js","mappings":"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","sources":["webpack://deepdive/../../../src/internal/Subject.ts","webpack://deepdive/../../../../src/internal/observable/combineLatest.ts","webpack://deepdive/../../../../src/internal/operators/finalize.ts","webpack://deepdive/../../../../src/internal/operators/share.ts","webpack://deepdive/../../../../src/internal/operators/startWith.ts","webpack://deepdive/../../../../src/internal/util/ObjectUnsubscribedError.ts","webpack://deepdive/../../../../src/internal/util/argsArgArrayOrObject.ts","webpack://deepdive/../../../../src/internal/util/createObject.ts","webpack://deepdive/../src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,"// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n/**\n * This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\n * @public\n */\nexport type ScrollMode = 'always' | 'if-needed'\n\n/** @public */\nexport interface Options {\n  /**\n   * Control the logical scroll position on the y-axis. The spec states that the `block` direction is related to the [writing-mode](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode), but this is not implemented yet in this library.\n   * This means that `block: 'start'` aligns to the top edge and `block: 'end'` to the bottom.\n   * @defaultValue 'center'\n   */\n  block?: ScrollLogicalPosition\n  /**\n   * Like `block` this is affected by the [writing-mode](https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode). In left-to-right pages `inline: 'start'` will align to the left edge. In right-to-left it should be flipped. This will be supported in a future release.\n   * @defaultValue 'nearest'\n   */\n  inline?: ScrollLogicalPosition\n  /**\n   * This is a proposed addition to the spec that you can track here: https://github.com/w3c/csswg-drafts/pull/5677\n   *\n   * This library will be updated to reflect any changes to the spec and will provide a migration path.\n   * To be backwards compatible with `Element.scrollIntoViewIfNeeded` if something is not 100% visible it will count as \"needs scrolling\". If you need a different visibility ratio your best option would be to implement an [Intersection Observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API).\n   * @defaultValue 'always'\n   */\n  scrollMode?: ScrollMode\n  /**\n   * By default there is no boundary. All the parent elements of your target is checked until it reaches the viewport ([`document.scrollingElement`](https://developer.mozilla.org/en-US/docs/Web/API/document/scrollingElement)) when calculating layout and what to scroll.\n   * By passing a boundary you can short-circuit this loop depending on your needs:\n   * \n   * - Prevent the browser window from scrolling.\n   * - Scroll elements into view in a list, without scrolling container elements.\n   * \n   * You can also pass a function to do more dynamic checks to override the scroll scoping:\n   * \n   * ```js\n   * let actions = compute(target, {\n   *   boundary: (parent) => {\n   *     // By default `overflow: hidden` elements are allowed, only `overflow: visible | clip` is skipped as\n   *     // this is required by the CSSOM spec\n   *     if (getComputedStyle(parent)['overflow'] === 'hidden') {\n   *       return false\n   *     }\n\n   *     return true\n   *   },\n   * })\n   * ```\n   * @defaultValue null\n   */\n  boundary?: Element | ((parent: Element) => boolean) | null\n  /**\n   * New option that skips auto-scrolling all nodes with overflow: hidden set\n   * See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\n   * @defaultValue false\n   * @public\n   */\n  skipOverflowHiddenElements?: boolean\n}\n\n/** @public */\nexport interface ScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nlet isElement = (el: any): el is Element =>\n  typeof el === 'object' && el != null && el.nodeType === 1\n\nlet canOverflow = (\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) => {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nlet getFrameElement = (el: Element) => {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nlet isHiddenByFrame = (el: Element): boolean => {\n  let frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nlet isScrollable = (el: Element, skipOverflowHiddenElements?: boolean) => {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    let style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nlet alignNearest = (\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) => {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nlet getParentElement = (element: Node): Element | null => {\n  let parent = element.parentElement\n  if (parent == null) {\n    return (element.getRootNode() as ShadowRoot).host || null\n  }\n  return parent\n}\n\n/** @public */\nexport let compute = (target: Element, options: Options): ScrollAction[] => {\n  if (typeof document === 'undefined') {\n    // If there's no DOM we assume it's not in a browser environment\n    return []\n  }\n\n  let { scrollMode, block, inline, boundary, skipOverflowHiddenElements } =\n    options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  let checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  let scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  let frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = getParentElement(cursor)\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  let viewportWidth = window.visualViewport?.width ?? innerWidth\n  let viewportHeight = window.visualViewport?.height ?? innerHeight\n  let { scrollX, scrollY } = window\n\n  let {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  let computations: ScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    let frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    let { height, width, top, right, bottom, left } =\n      frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    let frameStyle = getComputedStyle(frame)\n    let borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    let borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    let borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    let borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    let scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    let scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    let scaleX =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth === 0\n          ? 0\n          : width / (frame as HTMLElement).offsetWidth\n        : 0\n    let scaleY =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight === 0\n          ? 0\n          : height / (frame as HTMLElement).offsetHeight\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          scrollY,\n          scrollY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          scrollY + targetBlock,\n          scrollY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          scrollX,\n          scrollX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          scrollX + targetInline,\n          scrollX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + scrollY)\n      inlineScroll = Math.max(0, inlineScroll + scrollX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      let { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll / scaleY,\n          frame.scrollHeight - height / scaleY + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll / scaleX,\n          frame.scrollWidth - width / scaleX + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n"],"names":["Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","Subject","_super","__extends","_this","call","closed","currentObservers","observers","isStopped","hasError","thrownError","prototype","lift","operator","subject","AnonymousSubject","_throwIfClosed","next","value","Array","from","_b","__values","_c","done","observer","error","err","length","shift","complete","unsubscribe","Object","defineProperty","get","_a","_trySubscribe","subscriber","_subscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","subscribe","argsArgArrayOrObject","identity","mapOneOrManyArgs","popResultSelector","popScheduler","createObject","createOperatorSubscriber","executeSchedule","combineLatest","args","_i","arguments","scheduler","resultSelector","observables","keys","result","combineLatestInit","values","pipe","valueTransform","maybeSchedule","active","remainingFirstValues","i","hasFirstValue","slice","execute","subscription","operate","finalize","callback","add","innerFrom","SafeSubscriber","share","options","connector","resetOnError","resetOnComplete","_d","resetOnRefCountZero","wrapperSource","connection","resetConnection","refCount","hasCompleted","hasErrored","cancelReset","undefined","reset","resetAndUnsubscribe","conn","dest","handleReset","on","onSubscriber","apply","__spreadArray","__read","concat","startWith","createErrorClass","ObjectUnsubscribedErrorImpl","name","message","isArray","getPrototypeOf","objectProto","getKeys","first_1","isPOJO","map","key","obj","_typeof","reduce","t","nodeType","e","n","clientHeight","scrollHeight","clientWidth","scrollWidth","l","getComputedStyle","overflowY","overflowX","ownerDocument","defaultView","frameElement","o","r","d","parentElement","getRootNode","host","h","f","document","u","scrollMode","s","block","c","inline","a","boundary","g","skipOverflowHiddenElements","m","TypeError","p","scrollingElement","documentElement","w","W","body","H","window","visualViewport","width","innerWidth","b","height","innerHeight","_window","v","scrollX","y","scrollY","_e$getBoundingClientR","getBoundingClientRect","E","M","x","top","I","right","C","bottom","R","left","T","V","k","_e$getBoundingClientR2","parseInt","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","B","D","L","offsetWidth","S","offsetHeight","X","Y","Math","max","scrollLeft","scrollTop","min","el","compute","behavior","isConnected","contains","_iterator","_createForOfIteratorHelper","_step","_step$value","scroll","default"],"sourceRoot":""}