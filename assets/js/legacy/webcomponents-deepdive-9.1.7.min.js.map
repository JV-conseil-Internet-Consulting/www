{"version":3,"file":"legacy/webcomponents-deepdive-9.1.7.min.js","mappings":";;;;;;;;;;;;;;;;;;AAA+C;AACnB;AACK;AACO;AAExC,IAAAA,OAAA,GAA2BC,MAAM;EAAzBC,cAAc,GAAAF,OAAA,CAAdE,cAAc;AAEtB,IAAIC,WAAW,GAAG,KAAK;AACvB;AACA,IAAIC,OAAO,GAAG,IAAI;AAElB,IAAIF,cAAc,CAAC,2BAA2B,CAAC,EAAE;EAC/CA,cAAc,CAAC,2BAA2B,CAAC,CAAC,UAACG,KAAK,EAAK;IACrDD,OAAO,GAAGC,KAAK;IACf,IAAIF,WAAW,EAAE;MACfE,KAAK,EAAE;IACT;EACF,CAAC,CAAC;AACJ;AAEA,SAASC,YAAYA,CAAA,EAAG;EACtB,IAAIL,MAAM,CAACM,mBAAmB,CAACC,SAAS,EAAE;IACxCP,MAAM,CAACM,mBAAmB,CAACC,SAAS,CAACP,MAAM,CAACQ,QAAQ,CAAC;EACvD;EACAL,OAAO,IAAIA,OAAO,EAAE;EACpBD,WAAW,GAAG,IAAI;EAClBM,QAAQ,CAACC,aAAa,CAAC,IAAIC,WAAW,CAAC,oBAAoB,EAAE;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC,CAAC;AAClF;AAEA,IAAIH,QAAQ,CAACI,UAAU,KAAK,UAAU,EAAE;EACtC;EACAZ,MAAM,CAACa,gBAAgB,CAAC,MAAM,EAAER,YAAY,CAAC;EAC7CL,MAAM,CAACa,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;IAChDb,MAAM,CAACc,mBAAmB,CAAC,MAAM,EAAET,YAAY,CAAC;IAChDA,YAAY,EAAE;EAChB,CAAC,CAAC;AACJ,CAAC,MAAM;EACLA,YAAY,EAAE;AAChB","sources":["webpack://deepdive/./_js/src/polyfills/webcomponents.js"],"sourcesContent":["import '@webcomponents/webcomponents-platform';\nimport '@webcomponents/url';\nimport '@webcomponents/template';\nimport '@webcomponents/custom-elements';\n\nconst { customElements } = window;\n\nlet shouldFlush = false;\n/** @type {?function()} */\nlet flusher = null;\n\nif (customElements['polyfillWrapFlushCallback']) {\n  customElements['polyfillWrapFlushCallback']((flush) => {\n    flusher = flush;\n    if (shouldFlush) {\n      flush();\n    }\n  });\n}\n\nfunction flushAndFire() {\n  if (window.HTMLTemplateElement.bootstrap) {\n    window.HTMLTemplateElement.bootstrap(window.document);\n  }\n  flusher && flusher();\n  shouldFlush = true;\n  document.dispatchEvent(new CustomEvent('WebComponentsReady', { bubbles: true }));\n}\n\nif (document.readyState !== 'complete') {\n  // this script may come between DCL and load, so listen for both, and cancel load listener if DCL fires\n  window.addEventListener('load', flushAndFire);\n  window.addEventListener('DOMContentLoaded', () => {\n    window.removeEventListener('load', flushAndFire);\n    flushAndFire();\n  });\n} else {\n  flushAndFire();\n}\n"],"names":["_window","window","customElements","shouldFlush","flusher","flush","flushAndFire","HTMLTemplateElement","bootstrap","document","dispatchEvent","CustomEvent","bubbles","readyState","addEventListener","removeEventListener"],"sourceRoot":""}