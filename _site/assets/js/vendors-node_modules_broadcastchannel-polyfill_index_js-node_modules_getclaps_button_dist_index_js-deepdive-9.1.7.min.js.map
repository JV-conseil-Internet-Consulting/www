{"version":3,"file":"vendors-node_modules_broadcastchannel-polyfill_index_js-node_modules_getclaps_button_dist_index_js-deepdive-9.1.7.min.js","mappings":"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","sources":["webpack://deepdive/./node_modules/broadcastchannel-polyfill/index.js","webpack://deepdive/../node_modules/kv-storage-polyfill/node_modules/babel-plugin-transform-async-to-promises/helpers.js","webpack://deepdive/../node_modules/kv-storage-polyfill/src/weak_map.js","webpack://deepdive/../node_modules/kv-storage-polyfill/src/idb_utils.js","webpack://deepdive/../node_modules/kv-storage-polyfill/src/async_iterator.js","webpack://deepdive/../node_modules/kv-storage-polyfill/src/index.js","webpack://deepdive/../node_modules/lit-html/src/lib/dom.ts","webpack://deepdive/../node_modules/lit-html/src/lib/template.ts","webpack://deepdive/../node_modules/lit-html/src/lib/modify-template.ts","webpack://deepdive/../node_modules/lit-html/src/lib/directive.ts","webpack://deepdive/../node_modules/lit-html/src/lib/part.ts","webpack://deepdive/../node_modules/lit-html/src/lib/template-instance.ts","webpack://deepdive/../node_modules/lit-html/src/lib/template-result.ts","webpack://deepdive/../node_modules/lit-html/src/lib/parts.ts","webpack://deepdive/../node_modules/lit-html/src/lib/template-factory.ts","webpack://deepdive/../node_modules/lit-html/src/lib/render.ts","webpack://deepdive/../node_modules/lit-html/src/lib/default-template-processor.ts","webpack://deepdive/../node_modules/lit-html/src/lit-html.ts","webpack://deepdive/../node_modules/lit-html/src/lib/shady-render.ts","webpack://deepdive/../node_modules/lit-element/src/lib/updating-element.ts","webpack://deepdive/../node_modules/lit-element/src/lib/decorators.ts","webpack://deepdive/../node_modules/lit-element/src/lib/css-tag.ts","webpack://deepdive/../node_modules/lit-element/src/lit-element.ts","webpack://deepdive/../node_modules/lit-html/src/directives/class-map.ts","webpack://deepdive/../node_modules/lit-html/src/directives/style-map.ts","webpack://deepdive/../node_modules/lit-html/src/directives/repeat.ts","webpack://deepdive/../node_modules/lit-html/src/directives/unsafe-html.ts","webpack://deepdive/../src/styles.ts","webpack://deepdive/../node_modules/typed-array-utils/index.ts","webpack://deepdive/../node_modules/uuid-class/src/index.ts","webpack://deepdive/../node_modules/@getclaps/proof-of-clap/node_modules/typed-array-utils/index.ts","webpack://deepdive/../node_modules/@getclaps/proof-of-clap/index.ts","webpack://deepdive/../src/api.ts","webpack://deepdive/../src/connected-count.ts","webpack://deepdive/../src/index.ts"],"sourcesContent":["(function(global) {\n    var channels = [];\n\n    function BroadcastChannel(channel) {\n        var $this = this;\n        channel = String(channel);\n\n        var id = '$BroadcastChannel$' + channel + '$';\n\n        channels[id] = channels[id] || [];\n        channels[id].push(this);\n\n        this._name = channel;\n        this._id = id;\n        this._closed = false;\n        this._mc = new MessageChannel();\n        this._mc.port1.start();\n        this._mc.port2.start();\n\n        global.addEventListener('storage', function(e) {\n            if (e.storageArea !== global.localStorage) return;\n            if (e.newValue == null || e.newValue === '') return;\n            if (e.key.substring(0, id.length) !== id) return;\n            var data = JSON.parse(e.newValue);\n            $this._mc.port2.postMessage(data);\n        });\n    }\n\n    BroadcastChannel.prototype = {\n        // BroadcastChannel API\n        get name() {\n            return this._name;\n        },\n        postMessage: function(message) {\n            var $this = this;\n            if (this._closed) {\n                var e = new Error();\n                e.name = 'InvalidStateError';\n                throw e;\n            }\n            var value = JSON.stringify(message);\n\n            // Broadcast to other contexts via storage events...\n            var key = this._id + String(Date.now()) + '$' + String(Math.random());\n            global.localStorage.setItem(key, value);\n            setTimeout(function() {\n                global.localStorage.removeItem(key);\n            }, 500);\n\n            // Broadcast to current context via ports\n            channels[this._id].forEach(function(bc) {\n                if (bc === $this) return;\n                bc._mc.port2.postMessage(JSON.parse(value));\n            });\n        },\n        close: function() {\n            if (this._closed) return;\n            this._closed = true;\n            this._mc.port1.close();\n            this._mc.port2.close();\n\n            var index = channels[this._id].indexOf(this);\n            channels[this._id].splice(index, 1);\n        },\n\n        // EventTarget API\n        get onmessage() {\n            return this._mc.port1.onmessage;\n        },\n        set onmessage(value) {\n            this._mc.port1.onmessage = value;\n        },\n        addEventListener: function(/*type, listener , useCapture*/) {\n            return this._mc.port1.addEventListener.apply(this._mc.port1, arguments);\n        },\n        removeEventListener: function(/*type, listener , useCapture*/) {\n            return this._mc.port1.removeEventListener.apply(this._mc.port1, arguments);\n        },\n        dispatchEvent: function(/*event*/) {\n            return this._mc.port1.dispatchEvent.apply(this._mc.port1, arguments);\n        },\n    };\n\n    global.BroadcastChannel = global.BroadcastChannel || BroadcastChannel;\n})(self);\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t\tthis[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\t\treturn this;\n\t\t};\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nlet c = 0;\nexport default typeof WeakMap === 'function'\n  ? WeakMap\n  : function () {\n    const id = typeof Symbol === 'function' ? Symbol(0) : `__weak$${++c}`;\n    this.set = (key, val) => {\n      key[id] = val;\n    };\n    this.get = key => key[id];\n  };\n","/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Allows a \"mutator\" function, which is simply a callback through which the success result will be passed.\n * This is important for iDB transactions in browsers withing native Promise support, where the transaction is closed before executing a promise chain.\n * @private\n */\nexport function promiseForRequest (request, mutator) {\n  return new Promise((resolve, reject) => {\n    request.onsuccess = () => {\n      let result = request.result;\n      if (mutator) result = mutator(result);\n      resolve(result);\n    };\n    request.onerror = () => {\n      reject(request.error);\n    };\n  });\n}\n\nexport function keyValuePairPromise (store, range) {\n  return promiseForRequest(\n    store.openCursor(range),\n    result => result ? [result.key, result.value] : []\n  );\n}\n\nexport function promiseForTransaction (transaction) {\n  return new Promise((resolve, reject) => {\n    transaction.oncomplete = () => {\n      resolve();\n    };\n    transaction.onabort = () => {\n      reject(transaction.error);\n    };\n    transaction.onerror = () => {\n      reject(transaction.error);\n    };\n  });\n}\n\nexport function throwForDisallowedKey (key) {\n  if (!isAllowedAsAKey(key)) {\n    throw Error('kv-storage: The given value is not allowed as a key');\n  }\n}\n\nexport const HASNT_STARTED_YET = {};\n\nexport function getNextKey (store, lastKey) {\n  const range = getRangeForKey(lastKey);\n  return keyValuePairPromise(store, range).then(ret => ret[0]);\n}\n\nexport function getNextKeyValuePair (store, lastKey) {\n  const range = getRangeForKey(lastKey);\n  return keyValuePairPromise(store, range);\n}\n\nfunction getRangeForKey (key) {\n  if (key === HASNT_STARTED_YET) {\n    // This is a stand-in for the spec's \"unbounded\" range, which isn't exposed\n    // to JS currently. If we ever get keys that sort below -Infinity, e.g. per\n    // https://github.com/w3c/IndexedDB/issues/76, then this needs to change.\n    // Alternately, if we add better primitives to IDB for getting the first\n    // key, per\n    // https://github.com/WICG/kv-storage/issues/6#issuecomment-452054944, then\n    // we could use those.\n    return IDBKeyRange.lowerBound(-Infinity);\n  }\n  return IDBKeyRange.lowerBound(key, true);\n}\n\nfunction isAllowedAsAKey (value) {\n  if (typeof value === 'number' || typeof value === 'string') {\n    return true;\n  }\n\n  if (typeof value === 'object' && value) {\n    if (Array.isArray(value)) {\n      return true;\n    }\n\n    if ('setUTCFullYear' in value) {\n      return true;\n    }\n\n    if (typeof ArrayBuffer === 'function' && ArrayBuffer.isView(value)) {\n      return true;\n    }\n\n    // isArrayBuffer\n    if ('byteLength' in value && 'length' in value) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport WeakMap from './weak_map.js';\nimport { getNextKey, getNextKeyValuePair, HASNT_STARTED_YET } from './idb_utils.js';\n\nconst _performDatabaseOperation = new WeakMap();\nconst _lastKey = new WeakMap(); // undefined = got to the end;\n// HASNT_STARTED_YET = not yet started\nconst _ongoingPromise = new WeakMap();\nconst _mode = new WeakMap();\n\n// @TODO this could be a function and we could use scope instead of weakmaps/properties\nclass StorageAreaAsyncIterator {\n  return () {\n    _lastKey.set(this, undefined);\n    // _performDatabaseOperation.set(iter, undefined);\n    // _ongoingPromise.set(iter, undefined);\n  }\n\n  next () {\n    const performDatabaseOperation = _performDatabaseOperation.get(this);\n    if (!performDatabaseOperation) {\n      return Promise.reject(new TypeError('Invalid this value'));\n    }\n\n    // We need to avoid multiple concurrent calls into the main logic of next(),\n    // which can happen if you manually manipulate the async iterator, i.e.\n    // `iter.next(); iter.next()` with no `await`s. This is because until we\n    // actually have the last key set correctly, such concurrent calls will use\n    // the wrong value for lastKey.\n\n    const currentOngoingPromise = _ongoingPromise.get(this);\n    let thisNextPromise;\n    if (currentOngoingPromise !== undefined) {\n      thisNextPromise = currentOngoingPromise.then(\n        () => getNextIterResult(this, performDatabaseOperation));\n    } else {\n      thisNextPromise = getNextIterResult(this, performDatabaseOperation);\n    }\n\n    _ongoingPromise.set(this, thisNextPromise);\n    return thisNextPromise;\n  }\n}\n\nif (typeof Symbol === 'function' && Symbol.asyncIterator) {\n  StorageAreaAsyncIterator.prototype[Symbol.asyncIterator] = function () {\n    return this;\n  };\n}\n\nfunction getNextIterResult (iter, performDatabaseOperation) {\n  return performDatabaseOperation(async (transaction, store) => {\n    const lastKey = _lastKey.get(iter);\n    if (lastKey === undefined) {\n      return { value: undefined, done: true };\n    }\n\n    const mode = _mode.get(iter);\n    let key;\n    let value;\n    let iterResultValue;\n    switch (mode) {\n    case 'keys': {\n      key = await getNextKey(store, lastKey);\n      iterResultValue = key;\n      break;\n    }\n    case 'values': {\n      [key, value] = await getNextKeyValuePair(store, lastKey);\n      iterResultValue = value;\n      break;\n    }\n    case 'entries': {\n      [key, value] = await getNextKeyValuePair(store, lastKey);\n      iterResultValue = key === undefined ? undefined : [key, value];\n      break;\n    }\n    }\n\n    _lastKey.set(iter, key);\n    _ongoingPromise.set(iter, undefined);\n\n    return { value: iterResultValue, done: key === undefined };\n  });\n}\n\nexport function createStorageAreaAsyncIterator (mode, performDatabaseOperation) {\n  const iter = new StorageAreaAsyncIterator();\n  _mode.set(iter, mode);\n  _performDatabaseOperation.set(iter, performDatabaseOperation);\n  _lastKey.set(iter, HASNT_STARTED_YET);\n  _ongoingPromise.set(iter, undefined);\n  return iter;\n}\n","/**\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport WeakMap from './weak_map.js';\nimport { createStorageAreaAsyncIterator } from './async_iterator.js';\nimport { promiseForRequest, promiseForTransaction, throwForDisallowedKey } from './idb_utils.js';\n\n// TODOs/spec-noncompliances:\n// - Susceptible to tampering of built-in prototypes and globals. We want to\n//   work on tooling to ameliorate that.\n\n// TODO: Use private fields when those ship.\n// In the meantime we use this hard-to-understand, but effective, pattern:\n// http://2ality.com/2016/01/private-data-classes.html#keeping-private-data-in-weakmaps\n// Of note, the weak map entries will live only as long as the corresponding StorageArea instances.\n//\n// Cheatsheet:\n// x.#y      <--->  _y.get(x)\n// x.#y = z  <--->  _y.set(x, z)\n\nconst _databaseName = new WeakMap();\nconst _databasePromise = new WeakMap();\n\nconst DEFAULT_STORAGE_AREA_NAME = 'default';\nconst DEFAULT_IDB_STORE_NAME = 'store';\n\nexport class StorageArea {\n  constructor (name) {\n    const database = `kv-storage:${name}`;\n    _databasePromise.set(this, null);\n    _databaseName.set(this, database);\n    // this._databasePromise = null;\n    // this._databaseName = database;\n\n    this.backingStore = {\n      database,\n      store: DEFAULT_IDB_STORE_NAME,\n      version: 1\n    };\n  }\n\n  async set (key, value) {\n    throwForDisallowedKey(key);\n\n    return performDatabaseOperation(this, 'readwrite', (transaction, store) => {\n      if (value === undefined) {\n        store.delete(key);\n      } else {\n        store.put(value, key);\n      }\n\n      return promiseForTransaction(transaction);\n    });\n  }\n\n  async get (key) {\n    throwForDisallowedKey(key);\n\n    return performDatabaseOperation(this, 'readonly', (transaction, store) => {\n      return promiseForRequest(store.get(key));\n    });\n  }\n\n  async delete (key) {\n    throwForDisallowedKey(key);\n\n    return performDatabaseOperation(this, 'readwrite', (transaction, store) => {\n      store.delete(key);\n      return promiseForTransaction(transaction);\n    });\n  }\n\n  async clear () {\n    // const databasePromise = this._databasePromise\n    const databasePromise = _databasePromise.get(this);\n    let db;\n    if (databasePromise !== null) {\n      // Don't try to delete, and clear the promise, while we're opening the database; wait for that\n      // first.\n      try {\n        db = await databasePromise;\n      } catch (e) {\n        // If the database failed to initialize, then that's fine, we'll still try to delete it.\n      }\n\n      // this._databasePromise = null;\n      _databasePromise.set(this, null);\n    }\n\n    // IE & Edge require closing before deleting, and a delay to sync.\n    if (db) {\n      try {\n        db.close();\n      } catch (e) {}\n      // return new Promise(setTimeout).then(() => this.clear()).then(() => new Promise(setTimeout));\n      // await Promise.resolve();\n      await new Promise(setTimeout);\n    }\n\n    // return promiseForRequest(self.indexedDB.deleteDatabase(this._databaseName));\n    return promiseForRequest(self.indexedDB.deleteDatabase(_databaseName.get(this)));\n  }\n\n  keys () {\n    return createStorageAreaAsyncIterator(\n      'keys', steps => performDatabaseOperation(this, 'readonly', steps));\n  }\n\n  values () {\n    return createStorageAreaAsyncIterator(\n      'values', steps => performDatabaseOperation(this, 'readonly', steps));\n  }\n\n  entries () {\n    return createStorageAreaAsyncIterator(\n      'entries', steps => performDatabaseOperation(this, 'readonly', steps));\n  }\n}\n\nif (typeof Symbol === 'function' && Symbol.asyncIterator) {\n  StorageArea.prototype[Symbol.asyncIterator] = StorageArea.prototype.entries;\n}\n\nexport default new StorageArea(DEFAULT_STORAGE_AREA_NAME);\n\nasync function performDatabaseOperation (area, mode, steps) {\n  // if (this._databasePromise === null) {\n  if (_databasePromise.get(area) === null) {\n    initializeDatabasePromise(area);\n  }\n\n  // const database = await this._databasePromise;\n  const database = await _databasePromise.get(area);\n  const transaction = database.transaction(DEFAULT_IDB_STORE_NAME, mode);\n  const store = transaction.objectStore(DEFAULT_IDB_STORE_NAME);\n\n  return steps(transaction, store);\n}\n\nfunction initializeDatabasePromise (area) {\n  const databaseName = _databaseName.get(area);\n  // const databaseName = this._databaseName;\n\n  // this._databasePromise = (\n  _databasePromise.set(area,\n    new Promise((resolve, reject) => {\n      const request = self.indexedDB.open(databaseName, 1);\n\n      request.onsuccess = () => {\n        const database = request.result;\n\n        if (!checkDatabaseSchema(database, databaseName, reject)) {\n          return;\n        }\n\n        database.onclose = () => {\n          _databasePromise.set(area, null);\n        };\n        database.onversionchange = () => {\n          database.close();\n          _databasePromise.set(area, null);\n        };\n        resolve(database);\n      };\n\n      request.onerror = () => reject(request.error);\n\n      request.onupgradeneeded = () => {\n        try {\n          request.result.createObjectStore(DEFAULT_IDB_STORE_NAME);\n        } catch (e) {\n          reject(e);\n        }\n      };\n    }));\n}\n\nfunction corrupted (databaseName) {\n  return new Error(`kv-storage: database \"${databaseName}\" corrupted`);\n}\n\nfunction checkDatabaseSchema (database, databaseName, reject) {\n  if (database.objectStoreNames.length !== 1) {\n    reject(corrupted(databaseName));\n    return false;\n  }\n\n  if (database.objectStoreNames[0] !== DEFAULT_IDB_STORE_NAME) {\n    reject(corrupted(databaseName));\n    return false;\n  }\n\n  const transaction = database.transaction(DEFAULT_IDB_STORE_NAME, 'readonly');\n  const store = transaction.objectStore(DEFAULT_IDB_STORE_NAME);\n\n  if (store.autoIncrement || store.keyPath || store.indexNames.length) {\n    reject(corrupted(databaseName));\n    return false;\n  }\n\n  return true;\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\ndeclare const trustedTypes: typeof window.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes!.createPolicy('lit-html', {createHTML: (s) => s});\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    let value = this.getHTML();\n    if (policy !== undefined) {\n      // this is secure because `this.strings` is a TemplateStringsArray.\n      // TODO: validate this when\n      // https://github.com/tc39/proposal-array-is-template-object is\n      // implemented.\n      value = policy.createHTML(value) as unknown as string;\n    }\n    template.innerHTML = value;\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    const parts = this.parts;\n\n    // If we're assigning an attribute via syntax like:\n    //    attr=\"${foo}\"  or  attr=${foo}\n    // but not\n    //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n    // then we don't want to coerce the attribute value into one long\n    // string. Instead we want to just return the value itself directly,\n    // so that sanitizeDOMValue can get the actual value rather than\n    // String(value)\n    // The exception is if v is an array, in which case we do want to smash\n    // it together into a string without calling String() on the array.\n    //\n    // This also allows trusted values (when using TrustedTypes) being\n    // assigned to DOM sinks without being stringified in the process.\n    if (l === 1 && strings[0] === '' && strings[1] === '') {\n      const v = parts[0].value;\n      if (typeof v === 'symbol') {\n        return String(v);\n      }\n      if (typeof v === 'string' || !isIterable(v)) {\n        return v;\n      }\n    }\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)\n            .requestUpdateInternal(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState!: UpdateState;\n  private _instanceProperties?: PropertyValues;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise!: Promise<unknown>;\n  private _enableUpdatingResolver: (() => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._updateState = 0;\n    this._updatePromise =\n        new Promise((res) => this._enableUpdatingResolver = res);\n    this._changedProperties = new Map();\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdateInternal();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This protected version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  protected requestUpdateInternal(\n      name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      options = options || ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this.requestUpdateInternal(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this._hasRequestedUpdate) {\n      return;\n    }\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    if (cache) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      descriptor.get = function(this: LitElement) {\n        if ((this as unknown as\n             {[key: string]: Element | null})[key as string] === undefined) {\n          ((this as unknown as {[key: string]: Element | null})[key as string] =\n               this.renderRoot.querySelector(selector));\n        }\n        return (\n            this as unknown as {[key: string]: Element | null})[key as string];\n      };\n    }\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype as any;\nconst legacyMatches =\n    ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(\n    slotName = '', flatten = false, selector = '') {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const slotSelector =\n            `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n        const slot = this.renderRoot.querySelector(slotSelector);\n        let nodes = slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n        if (nodes && selector) {\n          nodes = nodes.filter(\n              (node) => node.nodeType === Node.ELEMENT_NODE &&\n                      (node as Element).matches ?\n                  (node as Element).matches(selector) :\n                  legacyMatches.call(node as Element, selector));\n        }\n        return nodes;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `supportsAdoptingStyleSheets` is true then we assume\n      // CSSStyleSheet is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult, unsafeCSS} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n\nexport type CSSResultOrNative = CSSResult|CSSStyleSheet;\n\nexport interface CSSResultArray extends\n    Array<CSSResultOrNative|CSSResultArray> {}\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Reference to the underlying library method used to render the element's\n   * DOM. By default, points to the `render` method from lit-html's shady-render\n   * module.\n   *\n   * **Most users will never need to touch this property.**\n   *\n   * This  property should not be confused with the `render` instance method,\n   * which should be overridden to define a template for the element.\n   *\n   * Advanced users creating a new base class based on LitElement can override\n   * this property to point to a custom render method with a signature that\n   * matches [shady-render's `render`\n   * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n   *\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function or via constructible stylesheets.\n   */\n  static styles?: CSSResultOrNative|CSSResultArray;\n\n  private static _styles: Array<CSSResultOrNative|CSSResult>|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResultOrNative|CSSResultArray|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n\n    if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles = (styles: CSSResultArray, set: Set<CSSResultOrNative>):\n          Set<CSSResultOrNative> => styles.reduceRight(\n              (set: Set<CSSResultOrNative>, s) =>\n                  // Note: On IE set.add() does not return the set\n              Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n              set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResultOrNative>());\n      const styles: CSSResultOrNative[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = userStyles === undefined ? [] : [userStyles];\n    }\n\n    // Ensure that there are no invalid CSSStyleSheet instances here. They are\n    // invalid in two conditions.\n    // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n    //     this is impossible to check except via .replaceSync or use\n    // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n    //     false)\n    this._styles = this._styles.map((s) => {\n      if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n        // Flatten the cssText from the passed constructible stylesheet (or\n        // undetectable non-constructible stylesheet). The user might have\n        // expected to update their stylesheets over time, but the alternative\n        // is a crash.\n        const cssText = Array.prototype.slice.call(s.cssRules)\n                            .reduce((css, rule) => css + rule.cssText, '');\n        return unsafeCSS(cssText);\n      }\n      return s;\n    });\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls\n   * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n   * captures any pre-set values for registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {\n      renderRoot: Element|DocumentFragment;\n    }).renderRoot = this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the [[`styles`]]\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `NodePart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n  element: Element;\n  classes: Set<string> = new Set();\n  changed = false;\n\n  constructor(element: Element) {\n    this.element = element;\n    const classList = (element.getAttribute('class') || '').split(/\\s+/);\n    for (const cls of classList) {\n      this.classes.add(cls);\n    }\n  }\n  add(cls: string) {\n    this.classes.add(cls);\n    this.changed = true;\n  }\n\n  remove(cls: string) {\n    this.classes.delete(cls);\n    this.changed = true;\n  }\n\n  commit() {\n    if (this.changed) {\n      let classString = '';\n      this.classes.forEach((cls) => classString += cls + ' ');\n      this.element.setAttribute('class', classString);\n    }\n  }\n}\n\nexport interface ClassInfo {\n  readonly [name: string]: string|boolean|number;\n}\n\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap<Part, Set<string>>();\n\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo: ClassInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'class' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `classMap` directive must be used in the `class` attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {element} = committer;\n\n  let previousClasses = previousClassesCache.get(part);\n  if (previousClasses === undefined) {\n    // Write static classes once\n    // Use setAttribute() because className isn't a string on SVG elements\n    element.setAttribute('class', committer.strings.join(' '));\n    previousClassesCache.set(part, previousClasses = new Set());\n  }\n\n  const classList =\n      (element.classList || new ClassList(element)) as DOMTokenList | ClassList;\n\n  // Remove old classes that no longer apply\n  // We use forEach() instead of for-of so that re don't require down-level\n  // iteration.\n  previousClasses.forEach((name) => {\n    if (!(name in classInfo)) {\n      classList.remove(name);\n      previousClasses!.delete(name);\n    }\n  });\n\n  // Add or remove classes based on their classMap value\n  for (const name in classInfo) {\n    const value = classInfo[name];\n    if (value != previousClasses.has(name)) {\n      // We explicitly want a loose truthy check of `value` because it seems\n      // more convenient that '' and 0 are skipped.\n      if (value) {\n        classList.add(name);\n        previousClasses.add(name);\n      } else {\n        classList.remove(name);\n        previousClasses.delete(name);\n      }\n    }\n  }\n  if (typeof (classList as ClassList).commit === 'function') {\n    (classList as ClassList).commit();\n  }\n});\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\nexport interface StyleInfo {\n  readonly [name: string]: string;\n}\n\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst previousStylePropertyCache = new WeakMap<AttributePart, Set<string>>();\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS properties. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo: StyleInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'style' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `styleMap` directive must be used in the style attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {style} = committer.element as HTMLElement;\n\n  let previousStyleProperties = previousStylePropertyCache.get(part);\n\n  if (previousStyleProperties === undefined) {\n    // Write static styles once\n    style.cssText = committer.strings.join(' ');\n    previousStylePropertyCache.set(part, previousStyleProperties = new Set());\n  }\n\n  // Remove old properties that no longer exist in styleInfo\n  // We use forEach() instead of for-of so that re don't require down-level\n  // iteration.\n  previousStyleProperties.forEach((name) => {\n    if (!(name in styleInfo)) {\n      previousStyleProperties!.delete(name);\n      if (name.indexOf('-') === -1) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (style as any)[name] = null;\n      } else {\n        style.removeProperty(name);\n      }\n    }\n  });\n\n  // Add or update properties\n  for (const name in styleInfo) {\n    previousStyleProperties.add(name);\n    if (name.indexOf('-') === -1) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (style as any)[name] = styleInfo[name];\n    } else {\n      style.setProperty(name, styleInfo[name]);\n    }\n  }\n});\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {DirectiveFn} from '../lib/directive.js';\nimport {createMarker, directive, NodePart, Part, removeNodes, reparentNodes} from '../lit-html.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart =\n    (containerPart: NodePart, beforePart?: NodePart): NodePart => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = beforePart === undefined ? containerPart.endNode :\n                                                    beforePart.startNode;\n      const startNode = container.insertBefore(createMarker(), beforeNode);\n      container.insertBefore(createMarker(), beforeNode);\n      const newPart = new NodePart(containerPart.options);\n      newPart.insertAfterNode(startNode);\n      return newPart;\n    };\n\nconst updatePart = (part: NodePart, value: unknown) => {\n  part.setValue(value);\n  part.commit();\n  return part;\n};\n\nconst insertPartBefore =\n    (containerPart: NodePart, part: NodePart, ref?: NodePart) => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = ref ? ref.startNode : containerPart.endNode;\n      const endNode = part.endNode.nextSibling;\n      if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n      }\n    };\n\nconst removePart = (part: NodePart) => {\n  removeNodes(\n      part.startNode.parentNode!, part.startNode, part.endNode.nextSibling);\n};\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap<NodePart, (NodePart | null)[]>();\nconst keyListCache = new WeakMap<NodePart, unknown[]>();\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat =\n    directive(\n        <T>(items: Iterable<T>,\n            keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n            template?: ItemTemplate<T>):\n            DirectiveFn => {\n              let keyFn: KeyFn<T>;\n              if (template === undefined) {\n                template = keyFnOrTemplate;\n              } else if (keyFnOrTemplate !== undefined) {\n                keyFn = keyFnOrTemplate as KeyFn<T>;\n              }\n\n              return (containerPart: Part): void => {\n                if (!(containerPart instanceof NodePart)) {\n                  throw new Error('repeat can only be used in text bindings');\n                }\n                // Old part & key lists are retrieved from the last update\n                // (associated with the part for this instance of the directive)\n                const oldParts = partListCache.get(containerPart) || [];\n                const oldKeys = keyListCache.get(containerPart) || [];\n\n                // New part list will be built up as we go (either reused from\n                // old parts or created for new keys in this update). This is\n                // saved in the above cache at the end of the update.\n                const newParts: NodePart[] = [];\n\n                // New value list is eagerly generated from items along with a\n                // parallel array indicating its key.\n                const newValues: unknown[] = [];\n                const newKeys: unknown[] = [];\n                let index = 0;\n                for (const item of items) {\n                  newKeys[index] = keyFn ? keyFn(item, index) : index;\n                  newValues[index] = template !(item, index);\n                  index++;\n                }\n\n                // Maps from key to index for current and previous update; these\n                // are generated lazily only when needed as a performance\n                // optimization, since they are only required for multiple\n                // non-contiguous changes in the list, which are less common.\n                let newKeyToIndexMap!: Map<unknown, number>;\n                let oldKeyToIndexMap!: Map<unknown, number>;\n\n                // Head and tail pointers to old parts and new values\n                let oldHead = 0;\n                let oldTail = oldParts.length - 1;\n                let newHead = 0;\n                let newTail = newValues.length - 1;\n\n                // Overview of O(n) reconciliation algorithm (general approach\n                // based on ideas found in ivi, vue, snabbdom, etc.):\n                //\n                // * We start with the list of old parts and new values (and\n                //   arrays of their respective keys), head/tail pointers into\n                //   each, and we build up the new list of parts by updating\n                //   (and when needed, moving) old parts or creating new ones.\n                //   The initial scenario might look like this (for brevity of\n                //   the diagrams, the numbers in the array reflect keys\n                //   associated with the old parts or new values, although keys\n                //   and parts/values are actually stored in parallel arrays\n                //   indexed using the same head/tail pointers):\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n                //                                      item order\n                //      newHead ^                 ^ newTail\n                //\n                // * Iterate old & new lists from both sides, updating,\n                //   swapping, or removing parts at the head/tail locations\n                //   until neither head nor tail can move.\n                //\n                // * Example below: keys at head pointers match, so update old\n                //   part 0 in-place (no need to move it) and record part 0 in\n                //   the `newParts` list. The last thing we do is advance the\n                //   `oldHead` and `newHead` pointers (will be reflected in the\n                //   next diagram).\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n                //                                      & newHead\n                //      newHead ^                 ^ newTail\n                //\n                // * Example below: head pointers don't match, but tail\n                //   pointers do, so update part 6 in place (no need to move\n                //   it), and record part 6 in the `newParts` list. Last,\n                //   advance the `oldTail` and `oldHead` pointers.\n                //\n                //         oldHead v              v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n                //                                      & newTail\n                //         newHead ^              ^ newTail\n                //\n                // * If neither head nor tail match; next check if one of the\n                //   old head/tail items was removed. We first need to generate\n                //   the reverse map of new keys to index (`newKeyToIndexMap`),\n                //   which is done once lazily as a performance optimization,\n                //   since we only hit this case if multiple non-contiguous\n                //   changes were made. Note that for contiguous removal\n                //   anywhere in the list, the head and tails would advance\n                //   from either end and pass each other before we get to this\n                //   case and removals would be handled in the final while loop\n                //   without needing to generate the map.\n                //\n                // * Example below: The key at `oldTail` was removed (no longer\n                //   in the `newKeyToIndexMap`), so remove that part from the\n                //   DOM and advance just the `oldTail` pointer.\n                //\n                //         oldHead v           v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n                //         newHead ^           ^ newTail\n                //\n                // * Once head and tail cannot move, any mismatches are due to\n                //   either new or moved items; if a new key is in the previous\n                //   \"old key to old index\" map, move the old part to the new\n                //   location, otherwise create and insert a new part. Note\n                //   that when moving an old part we null its position in the\n                //   oldParts array if it lies between the head and tail so we\n                //   know to skip it when the pointers get there.\n                //\n                // * Example below: neither head nor tail match, and neither\n                //   were removed; so find the `newHead` key in the\n                //   `oldKeyToIndexMap`, and move that old part's DOM into the\n                //   next head position (before `oldParts[oldHead]`). Last,\n                //   null the part in the `oldPart` array since it was\n                //   somewhere in the remaining oldParts still to be scanned\n                //   (between the head and tail pointers) so that we know to\n                //   skip that old part on future iterations.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n                //                                      newHead\n                //         newHead ^           ^ newTail\n                //\n                // * Note that for moves/insertions like the one above, a part\n                //   inserted at the head pointer is inserted before the\n                //   current `oldParts[oldHead]`, and a part inserted at the\n                //   tail pointer is inserted before `newParts[newTail+1]`. The\n                //   seeming asymmetry lies in the fact that new parts are\n                //   moved into place outside in, so to the right of the head\n                //   pointer are old parts, and to the right of the tail\n                //   pointer are new parts.\n                //\n                // * We always restart back from the top of the algorithm,\n                //   allowing matching and simple updates in place to\n                //   continue...\n                //\n                // * Example below: the head pointers once again match, so\n                //   simply update part 1 and record it in the `newParts`\n                //   array.  Last, advance both head pointers.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n                //                                      & newHead\n                //            newHead ^        ^ newTail\n                //\n                // * As mentioned above, items that were moved as a result of\n                //   being stuck (the final else clause in the code below) are\n                //   marked with null, so we always advance old pointers over\n                //   these so we're comparing the next actual old value on\n                //   either end.\n                //\n                // * Example below: `oldHead` is null (already placed in\n                //   newParts), so advance `oldHead`.\n                //\n                //            oldHead v     v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n                //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n                //               newHead ^     ^ newTail\n                //\n                // * Note it's not critical to mark old parts as null when they\n                //   are moved from head to tail or tail to head, since they\n                //   will be outside the pointer range and never visited again.\n                //\n                // * Example below: Here the old tail key matches the new head\n                //   key, so the part at the `oldTail` position and move its\n                //   DOM to the new head position (before `oldParts[oldHead]`).\n                //   Last, advance `oldTail` and `newHead` pointers.\n                //\n                //               oldHead v  v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n                //                                     advance oldTail & newHead\n                //               newHead ^     ^ newTail\n                //\n                // * Example below: Old and new head keys match, so update the\n                //   old head part in place, and advance the `oldHead` and\n                //   `newHead` pointers.\n                //\n                //               oldHead v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n                //                                      newHead\n                //                  newHead ^  ^ newTail\n                //\n                // * Once the new or old pointers move past each other then all\n                //   we have left is additions (if old list exhausted) or\n                //   removals (if new list exhausted). Those are handled in the\n                //   final while loops at the end.\n                //\n                // * Example below: `oldHead` exceeded `oldTail`, so we're done\n                //   with the main loop.  Create the remaining part and insert\n                //   it at the new head position, and the update is complete.\n                //\n                //                   (oldHead > oldTail)\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n                //                     newHead ^ newTail\n                //\n                // * Note that the order of the if/else clauses is not\n                //   important to the algorithm, as long as the null checks\n                //   come first (to ensure we're always working on valid old\n                //   parts) and that the final else clause comes last (since\n                //   that's where the expensive moves occur). The order of\n                //   remaining clauses is is just a simple guess at which cases\n                //   will be most common.\n                //\n                // * TODO(kschaaf) Note, we could calculate the longest\n                //   increasing subsequence (LIS) of old items in new position,\n                //   and only move those not in the LIS set. However that costs\n                //   O(nlogn) time and adds a bit more code, and only helps\n                //   make rare types of mutations require fewer moves. The\n                //   above handles removes, adds, reversal, swaps, and single\n                //   moves of contiguous items in linear time, in the minimum\n                //   number of moves. As the number of multiple moves where LIS\n                //   might help approaches a random shuffle, the LIS\n                //   optimization becomes less helpful, so it seems not worth\n                //   the code at this point. Could reconsider if a compelling\n                //   case arises.\n\n                while (oldHead <= oldTail && newHead <= newTail) {\n                  if (oldParts[oldHead] === null) {\n                    // `null` means old part at head has already been used\n                    // below; skip\n                    oldHead++;\n                  } else if (oldParts[oldTail] === null) {\n                    // `null` means old part at tail has already been used\n                    // below; skip\n                    oldTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newHead]) {\n                    // Old head matches new head; update in place\n                    newParts[newHead] =\n                        updatePart(oldParts[oldHead]!, newValues[newHead]);\n                    oldHead++;\n                    newHead++;\n                  } else if (oldKeys[oldTail] === newKeys[newTail]) {\n                    // Old tail matches new tail; update in place\n                    newParts[newTail] =\n                        updatePart(oldParts[oldTail]!, newValues[newTail]);\n                    oldTail--;\n                    newTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newTail]) {\n                    // Old head matches new tail; update and move to new tail\n                    newParts[newTail] =\n                        updatePart(oldParts[oldHead]!, newValues[newTail]);\n                    insertPartBefore(\n                        containerPart,\n                        oldParts[oldHead]!,\n                        newParts[newTail + 1]);\n                    oldHead++;\n                    newTail--;\n                  } else if (oldKeys[oldTail] === newKeys[newHead]) {\n                    // Old tail matches new head; update and move to new head\n                    newParts[newHead] =\n                        updatePart(oldParts[oldTail]!, newValues[newHead]);\n                    insertPartBefore(\n                        containerPart, oldParts[oldTail]!, oldParts[oldHead]!);\n                    oldTail--;\n                    newHead++;\n                  } else {\n                    if (newKeyToIndexMap === undefined) {\n                      // Lazily generate key-to-index maps, used for removals &\n                      // moves below\n                      newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                      oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                    }\n                    if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                      // Old head is no longer in new list; remove\n                      removePart(oldParts[oldHead]!);\n                      oldHead++;\n                    } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                      // Old tail is no longer in new list; remove\n                      removePart(oldParts[oldTail]!);\n                      oldTail--;\n                    } else {\n                      // Any mismatches at this point are due to additions or\n                      // moves; see if we have an old part we can reuse and move\n                      // into place\n                      const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                      const oldPart =\n                          oldIndex !== undefined ? oldParts[oldIndex] : null;\n                      if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(\n                            containerPart, oldParts[oldHead]!);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                      } else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(\n                            containerPart, oldPart, oldParts[oldHead]!);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex as number] = null;\n                      }\n                      newHead++;\n                    }\n                  }\n                }\n                // Add parts for any remaining new values\n                while (newHead <= newTail) {\n                  // For all remaining additions, we insert before last new\n                  // tail, since old pointers are no longer valid\n                  const newPart =\n                      createAndInsertPart(containerPart, newParts[newTail + 1]);\n                  updatePart(newPart, newValues[newHead]);\n                  newParts[newHead++] = newPart;\n                }\n                // Remove any remaining unused old parts\n                while (oldHead <= oldTail) {\n                  const oldPart = oldParts[oldHead++];\n                  if (oldPart !== null) {\n                    removePart(oldPart);\n                  }\n                }\n                // Save order of new parts for next round\n                partListCache.set(containerPart, newParts);\n                keyListCache.set(containerPart, newKeys);\n              };\n            }) as\n    <T>(items: Iterable<T>,\n        keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n        template?: ItemTemplate<T>) => DirectiveFn;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isPrimitive} from '../lib/parts.js';\nimport {directive, NodePart, Part} from '../lit-html.js';\n\ninterface PreviousValue {\n  readonly value: unknown;\n  readonly fragment: DocumentFragment;\n}\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap<NodePart, PreviousValue>();\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value: unknown) => (part: Part): void => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('unsafeHTML can only be used in text bindings');\n  }\n\n  const previousValue = previousValues.get(part);\n\n  if (previousValue !== undefined && isPrimitive(value) &&\n      value === previousValue.value && part.value === previousValue.fragment) {\n    return;\n  }\n\n  const template = document.createElement('template');\n  template.innerHTML = value as string;  // innerHTML casts to string internally\n  const fragment = document.importNode(template.content, true);\n  part.setValue(fragment);\n  previousValues.set(part, {value, fragment});\n});\n","import { css } from 'lit-element';\n\nexport const styles = css`\n:host {\n  display: block;\n  position: relative;\n  width: 5em;\n  height: 5em;\n  margin: 5em auto;\n}\n.style-root {\n  position: absolute;\n  fill: var(--clap-button-color, var(--theme-color, rgb(79,177,186)));\n  stroke: var(--clap-button-color, var(--theme-color, rgb(79,177,186)));\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0; }\n  .style-root .error { color: indianred }\n  .style-root button {\n    -webkit-tap-highlight-color: transparent;\n    cursor: pointer; \n    border: none;\n    background: none;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%; }\n  .style-root button:disabled {\n    cursor: default; }\n  .style-root .shockwave {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    color: var(--clap-button-color, var(--theme-color, rgb(79,177,186)));\n    border-radius: 50%; }\n  .style-root svg {\n    position: absolute;\n    width: 60%;\n    height: 60%;\n    margin: 20%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    opacity: 0.8;\n    stroke: none;\n    overflow: visible !important; }\n    .style-root svg g.flat {\n      visibility: hidden; }\n    .style-root svg g.outline {\n      visibility: visible; }\n  .style-root.clapped:not(.loading) svg g.flat {\n    visibility: visible; }\n  .style-root.clapped svg g.outline {\n    visibility: hidden; }\n  .style-root.loading svg g.outline {\n    visibility: visible; }\n  .style-root .count-container {\n    position: absolute;\n    width: 100%;\n    color: inherit;\n    user-select: none; }\n  .style-root .count-container.container-top {\n    top: -2.5em; }\n  .style-root .count-container.container-bottom {\n    bottom: -2.5em; }\n    .style-root .count-container > div {\n      width: 300%;\n      margin-left: -100%;\n      text-align: center; }\n  .style-root g.sparkle circle {\n    opacity: 0;\n    stroke-width: 0; }\n  .style-root:not(.clapped):not(.no-shockwave):not(.no-animation) .shockwave {\n    animation-name: shockwave;\n    animation-duration: 1.5s;\n    animation-iteration-count: infinite;\n    animation-timing-function: ease-in; }\n  .style-root.clap {\n    animation-name: pulse;\n    animation-duration: 0.5s;\n    animation-iteration-count: 1; \n    animation-timing-function: ease-out; }\n    .style-root.clap .sparkle circle {\n      animation-name: explode;\n      animation-duration: 0.5s;\n      animation-iteration-count: 1; }\n    .style-root.clap .container-top .count {\n      animation-name: hide-then-show;\n      animation-duration: 0.5s;\n      animation-iteration-count: 1; }\n    .style-root.clap .container-bottom .count {\n      animation-name: hide-then-show-inverse;\n      animation-duration: 0.5s;\n      animation-iteration-count: 1; }\n\n#hand-svg {\n  margin-top: 22%;\n  margin-left: 22%;\n}\n\n#countdown-svg {\n  width: 100%;\n  height: 100%;\n  stroke: var(--clap-button-color, var(--theme-color, rgb(79,177,186)));\n  margin: 0;\n}\n\n.countdown {\n  fill: none; \n  transform: rotateZ(0deg);\n  transform-origin: center;\n}\n\n.countdown circle {\n  stroke-width: 2px;\n  opacity: 1;\n  stroke-linecap: round;\n  stroke-dasharray: 308 308;\n  transform: rotate(-90deg);\n  transform-origin: center;\n}\n\n.style-root.ticking .countdown circle {\n  animation-timing-function: ease;\n  animation-name: countdown;\n  animation-duration: 3s; \n}\n\n.style-root.loading:not(.no-animation) .countdown {\n  animation: 2s linear infinite svg-animation; \n}\n\n.style-root.loading:not(.no-animation) .countdown circle {\n  animation: 1.4s ease-in-out infinite both circle-animation;\n  stroke-dasharray: 308;\n  stroke-dashoffset: 302; \n}\n\n@keyframes svg-animation {\n  0% { \n    transform: rotateZ(-90deg);\n  }\n  100% { \n    transform: rotateZ(270deg);\n  }\n}\n\n@keyframes circle-animation {\n  0%,\n  15% {\n    stroke-dashoffset: 280;\n    transform: rotate(0); \n  }\n  50%,\n  65% {\n    stroke-dashoffset: 75;\n    transform: rotate(45deg); \n  }\n  100% {\n    stroke-dashoffset: 280;\n    transform: rotate(360deg); \n  }\n}\n\n@keyframes countdown {\n  0% {\n    stroke-dasharray: 308 308;\n  }\n  50% {\n    stroke-dasharray: 308 308;\n  }\n  100% {\n    stroke-dasharray: 0 308;\n  }\n}\n\n@keyframes explode {\n  0% {\n    transform: translateX(10px);\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n    transform: translateX(25px);\n  }\n}\n\n@keyframes shockwave {\n  0% {\n    transform: scale(1);\n    opacity: 1; \n    box-shadow: 0 0 2px, inset 0 0 1px;\n  }\n  89.99% {\n    transform: scale(1);\n    opacity: 0;\n    box-shadow: 0 0 50px, inset 0 0 10px;\n  }\n  90%, 100% {\n    transform: scale(1);\n    opacity: 0;\n    box-shadow: 0 0 2px, inset 0 0 1px;\n  }\n}\n\n@keyframes pulse {\n  0% {\n    transform: scale(1);\n  }\n  25% {\n    transform: scale(1.1);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes hide-then-show {\n  0% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  20% {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  50% {\n    transform: translateY(10px);\n  }\n  80% {\n    transform: translateY(10px);\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0); \n  }\n}\n\n@keyframes hide-then-show-inverse {\n  0% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  20% {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n  80% {\n    transform: translateY(-10px);\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n`;\n","// Buffer Source Conversion\n// ------------------------\n\nexport const bufferSourceToUint8Array = (bs: BufferSource) => bs instanceof ArrayBuffer\n  ? new Uint8Array(bs)\n  : new Uint8Array(bs.buffer, bs.byteOffset, bs.byteLength);\n\nexport const bufferSourceToDataView = (bs: BufferSource) => bs instanceof ArrayBuffer\n  ? new DataView(bs)\n  : new DataView(bs.buffer, bs.byteOffset, bs.byteLength);\n\nconst bs2u8 = bufferSourceToUint8Array;\nconst bs2dv = bufferSourceToDataView;\n\n\n// Hex Functions\n// -------------\n\nexport const byteToHex = (byte: number) => byte.toString(16).padStart(2, '0');\nexport const hexToByte = (hexOctet: string) => parseInt(hexOctet, 16);\n\nexport const hexStringToBytes = (hexString: string) => new Uint8Array(hexString.match(/[0-9a-f]{1,2}/ig).map(hexToByte));\nexport const bytesToHexString = (bufferSource: BufferSource) => Array.from(bs2u8(bufferSource), byte => byteToHex(byte)).join('');\n\nexport const bytesToHexArray = (bufferSource: BufferSource) => Array.from(bs2u8(bufferSource), byte => byteToHex(byte));\n\n\n// Concatenation\n// -------------\n\nexport function concatUint8Arrays(...uint8Arrays: Uint8Array[]) {\n  const size = uint8Arrays.reduce((size, u8) => size + u8.length, 0);\n  const res = new Uint8Array(size);\n  let i = 0;\n  for (const u8 of uint8Arrays) {\n    res.set(u8, i);\n    i += u8.length;\n  }\n  return res;\n}\n\nexport function concatBufferSources(...bufferSources: BufferSource[]) {\n  return concatUint8Arrays(...bufferSources.map(bs2u8));\n}\n\n// Splitting\n// ---------\n\nexport function splitUint8Array(uint8Array: Uint8Array, ...indices: number[]) {\n  const result: Uint8Array[] = new Array(indices.length + 1);\n  let prev = 0;\n  let i = 0;\n  for (const index of indices) {\n    result[i++] = uint8Array.subarray(prev, index);\n    prev = index;\n  }\n  result[i] = uint8Array.subarray(prev);\n  return result;\n}\n\nexport function splitBufferSource(bufferSource: BufferSource, ...indices: number[]) {\n  return splitUint8Array(bs2u8(bufferSource), ...indices);\n}\n\n\n// Comparison\n// ----------\n\nexport function compareUint8Arrays(u8_1: Uint8Array, ...u8s: Uint8Array[]) {\n  if (u8s.some(u8_i => u8_1.byteLength !== u8_i.byteLength)) return false;\n  let res = true;\n  for (const u8_i of u8s) {\n    for (let i = 0; i !== u8_1.length; i++) {\n      const r = u8_1[i] === u8_i[i];\n      res = r && res;\n    }\n  }\n  return res;\n}\n\nfunction compareDataViewsUint32(dv_1: DataView, ...dvs: DataView[]) {\n  if (dvs.some(dv_i => dv_1.byteLength !== dv_i.byteLength)) return false;\n  let res = true;\n  for (const dv_i of dvs) {\n    for (let i = 0; i !== dv_1.byteLength; i += 4) {\n      const r = dv_1.getUint32(i) === dv_i.getUint32(i);\n      res = r && res;\n    }\n  }\n  return res;\n}\n\nexport function compareBufferSources(bufferSource: BufferSource, ...bufferSources: BufferSource[]) {\n  return compareDataViewsUint32(bs2dv(bufferSource), ...bufferSources.map(bs2dv));\n}\n\nexport function unsafeCompareUint8Arrays(u8_1: Uint8Array, ...u8s: Uint8Array[]) {\n  if (u8s.some(u8_i => u8_1.byteLength !== u8_i.byteLength)) return false;\n  return u8s.every(u8_i => {\n    for (let i = 0; i !== u8_1.length; i++) if (u8_1[i] !== u8_i[i]) return false;\n    return true;\n  });\n}\n\nfunction unsafeCompareDataViewsUint32(dv_1: DataView, ...dvs: DataView[]) {\n  if (dvs.some((dv_i) => dv_1.byteLength !== dv_i.byteLength)) return false;\n  return dvs.every(dv_i => {\n    for (let i = 0; i !== dv_i.byteLength; i += 4) {\n      if (dv_1.getUint32(i) !== dv_i.getUint32(i)) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\nexport function unsafeCompareBufferSources(bufferSource: BufferSource, ...bufferSources: BufferSource[]) {\n  return unsafeCompareDataViewsUint32(bs2dv(bufferSource), ...bufferSources.map(bs2dv));\n}\n","import { bufferSourceToUint8Array, bytesToHexArray, concatUint8Arrays, hexStringToBytes } from 'typed-array-utils';\n\nfunction _bytesToUUIDString(uint8Array: Uint8Array) {\n  const hexArray = bytesToHexArray(uint8Array);\n  hexArray.splice(4, 0, '-');\n  hexArray.splice(7, 0, '-');\n  hexArray.splice(10, 0, '-');\n  hexArray.splice(13, 0, '-');\n  return hexArray.join('');\n}\n\nfunction _v4() {\n  const uuid = crypto.getRandomValues(new Uint8Array(16));\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  uuid[6] = (uuid[6] & 0x0f) | 0x40;\n  uuid[8] = (uuid[8] & 0x3f) | 0x80;\n\n  return uuid.buffer;\n}\n\nfunction _fromString(str: string) {\n  const hex = str.replace(/[^0-9a-f]/gi, '').slice(0, 32);\n  if (hex.length < 32) throw Error('UUID too short');\n  return hexStringToBytes(hex).buffer;\n}\n\nfunction stringToBytes(str: string) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  return new TextEncoder().encode(str);\n}\n\nasync function _v5(value: string | BufferSource, namespace: string | UUID) {\n  const valueBytes = typeof value === 'string'\n    ? stringToBytes(value)\n    : bufferSourceToUint8Array(value);\n\n  const namespaceUUID = typeof namespace === 'string'\n    ? new UUID(namespace)\n    : namespace\n\n  const hashBytes = new Uint8Array(\n    await crypto.subtle.digest('SHA-1', concatUint8Arrays(namespaceUUID, valueBytes))\n  );\n\n  hashBytes[6] = (hashBytes[6] & 0x0f) | 0x50; // version\n  hashBytes[8] = (hashBytes[8] & 0x3f) | 0x80;\n\n  return hashBytes.buffer.slice(0, 16);\n}\n\n/**\n * A better UUID class for JavaScript.\n * \n * UUID are represented as bytes (`Uint8Array`) and converted to strings on-demand.\n * \n * This class implements `toString` and `toJSON` for better language integration,\n * as well as inspection for node and Deno for a better development experience.\n * \n * For the most part, `UUID` can be used where  UUID strings are used,\n * except for equality checks. For those cases, `UUID` provides quick access \n * to the string representations via the `id` field.\n */\nexport class UUID extends Uint8Array {\n  /**\n   * Generate a new UUID version 4 (random).\n   * \n   * __Note that `crypto.getRandomValues` needs to be available in the global JS object!__\n   */\n  static v4() {\n    return new UUID(_v4());\n  }\n\n  /**\n   * Generated a new UUID version 5 (hashed)\n   * \n   * __Note that `crypto.subtle` needs to be available in the global JS object (Not the case on non-HTTPS sites)!__\n   * \n   * @param value \n   * @param namespace \n   */\n  static async v5(value: string | BufferSource, namespace: string | UUID) {\n    return new UUID(await _v5(value, namespace));\n  }\n\n  /**\n   * Generate a new UUID version 4 (random).\n   * __Note that `crypto.getRandomValues` needs to be available in the global JS object!__\n   */\n  constructor();\n  /** Creates a new UUID object from the provided string, which must be a valid UUID string. */\n  constructor(value: string);\n  /** Creates a copy of the provided UUID */\n  constructor(value: UUID);\n  /** Create a UUID from the provided iterable, where every value will be interpreted as a unsigned 8 bit integer. */\n  constructor(value: Iterable<number>);\n  /** Create a new UUID from the provided array-like structure. */\n  constructor(value: ArrayLike<number> | ArrayBufferLike);\n  /** Creates a UUID from the array buffer using 16 bytes started from the provided offset. */\n  constructor(value: ArrayBufferLike, byteOffset: number);\n  constructor(value?: string | UUID | Iterable<number> | ArrayLike<number> | ArrayBufferLike, byteOffset?: number) {\n    if (value == null) {\n      super(_v4());\n    } else if (typeof value === 'string') {\n      super(_fromString(value));\n    } else if (value instanceof UUID) {\n      super(value.buffer.slice(0));\n    } else {\n      const u8 = value instanceof ArrayBuffer || value instanceof SharedArrayBuffer \n        ? new Uint8Array(value, byteOffset ?? 0, 16)\n        : 'length' in value ? new Uint8Array(value) : new Uint8Array(value);\n      if (u8.length < 16) throw Error('UUID too short');\n      super(u8.buffer.slice(0, 16));\n    }\n  }\n\n  /**\n   * Quick access to the string representation for easier comparison.\n   * @example if (myUUID.id === otherUUID.id) { ... }\n   */\n  get id() {\n    return _bytesToUUIDString(this);\n  }\n\n  /**\n   * Quick access to the UUID string representation for easier comparison.\n   * @example if (myUUID.uuid === otherUUID.uuid) { ... }\n   */\n  get uuid() {\n    return _bytesToUUIDString(this);\n  }\n\n  toString() {\n    return _bytesToUUIDString(this);\n  }\n\n  toJSON() {\n    return _bytesToUUIDString(this);\n  }\n\n  // We don't operations like `map`, `subarray`, etc. to preserve the UUID class status\n  static get [Symbol.species]() { return Uint8Array }\n}\n\n// Better inspection for node and deno:\nconst nodeInspect = Symbol.for('nodejs.util.inspect.custom');\n\n// @ts-ignore\nconst denoInspect: symbol = typeof Deno !== 'undefined'\n  // @ts-ignore\n  ? 'symbols' in Deno ? Deno.symbols.customInspect : Deno.customInspect\n  : Symbol();\n\n// @ts-ignore\nUUID.prototype[nodeInspect] = function () { return `UUID [ ${this.uuid} ]` }\n\n// @ts-ignore\nUUID.prototype[denoInspect] = function () { return `UUID [ ${this.uuid} ]` }\n","// Buffer Source Conversion\n// ------------------------\n\nexport const bufferSourceToUint8Array = (bs: BufferSource) => bs instanceof ArrayBuffer\n  ? new Uint8Array(bs)\n  : new Uint8Array(bs.buffer, bs.byteOffset, bs.byteLength);\n\nexport const bufferSourceToDataView = (bs: BufferSource) => bs instanceof ArrayBuffer\n  ? new DataView(bs)\n  : new DataView(bs.buffer, bs.byteOffset, bs.byteLength);\n\nconst bs2u8 = bufferSourceToUint8Array;\nconst bs2dv = bufferSourceToDataView;\n\n\n// Hex Functions\n// -------------\n\nexport const byteToHex = (byte: number) => byte.toString(16).padStart(2, '0');\nexport const hexToByte = (hexOctet: string) => parseInt(hexOctet, 16);\n\nexport const hexStringToBytes = (hexString: string) => new Uint8Array(hexString.match(/[0-9a-f]{1,2}/ig).map(hexToByte));\nexport const bytesToHexString = (bufferSource: BufferSource) => Array.from(bs2u8(bufferSource), byte => byteToHex(byte)).join('');\n\nexport const bytesToHexArray = (bufferSource: BufferSource) => Array.from(bs2u8(bufferSource), byte => byteToHex(byte));\n\n\n// Concatenation\n// -------------\n\nexport function concatUint8Arrays(...uint8Arrays: Uint8Array[]) {\n  const size = uint8Arrays.reduce((size, u8) => size + u8.length, 0);\n  const res = new Uint8Array(size);\n  let i = 0;\n  for (const u8 of uint8Arrays) {\n    res.set(u8, i);\n    i += u8.length;\n  }\n  return res;\n}\n\nexport function concatBufferSources(...bufferSources: BufferSource[]) {\n  return concatUint8Arrays(...bufferSources.map(bs2u8));\n}\n\n// Splitting\n// ---------\n\nexport function splitUint8Array(uint8Array: Uint8Array, ...indices: number[]) {\n  const result: Uint8Array[] = new Array(indices.length + 1);\n  let prev = 0;\n  let i = 0;\n  for (const index of indices) {\n    result[i++] = uint8Array.subarray(prev, index);\n    prev = index;\n  }\n  result[i] = uint8Array.subarray(prev);\n  return result;\n}\n\nexport function splitBufferSource(bufferSource: BufferSource, ...indices: number[]) {\n  return splitUint8Array(bs2u8(bufferSource), ...indices);\n}\n\n\n// Comparison\n// ----------\n\nexport function compareUint8Arrays(u8_1: Uint8Array, ...u8s: Uint8Array[]) {\n  if (u8s.some(u8_i => u8_1.byteLength !== u8_i.byteLength)) return false;\n  let res = true;\n  for (const u8_i of u8s) {\n    for (let i = 0; i !== u8_1.length; i++) {\n      const r = u8_1[i] === u8_i[i];\n      res = r && res;\n    }\n  }\n  return res;\n}\n\nfunction compareDataViewsUint32(dv_1: DataView, ...dvs: DataView[]) {\n  if (dvs.some(dv_i => dv_1.byteLength !== dv_i.byteLength)) return false;\n  let res = true;\n  for (const dv_i of dvs) {\n    for (let i = 0; i !== dv_1.byteLength; i += 4) {\n      const r = dv_1.getUint32(i) === dv_i.getUint32(i);\n      res = r && res;\n    }\n  }\n  return res;\n}\n\nexport function compareBufferSources(bufferSource: BufferSource, ...bufferSources: BufferSource[]) {\n  return compareDataViewsUint32(bs2dv(bufferSource), ...bufferSources.map(bs2dv));\n}\n\nexport function unsafeCompareUint8Arrays(u8_1: Uint8Array, ...u8s: Uint8Array[]) {\n  if (u8s.some(u8_i => u8_1.byteLength !== u8_i.byteLength)) return false;\n  return u8s.every(u8_i => {\n    for (let i = 0; i !== u8_1.length; i++) if (u8_1[i] !== u8_i[i]) return false;\n    return true;\n  });\n}\n\nfunction unsafeCompareDataViewsUint32(dv_1: DataView, ...dvs: DataView[]) {\n  if (dvs.some((dv_i) => dv_1.byteLength !== dv_i.byteLength)) return false;\n  return dvs.every(dv_i => {\n    for (let i = 0; i !== dv_i.byteLength; i += 4) {\n      if (dv_1.getUint32(i) !== dv_i.getUint32(i)) {\n        return false;\n      }\n    }\n    return true;\n  });\n}\n\nexport function unsafeCompareBufferSources(bufferSource: BufferSource, ...bufferSources: BufferSource[]) {\n  return unsafeCompareDataViewsUint32(bs2dv(bufferSource), ...bufferSources.map(bs2dv));\n}\n","import { UUID } from \"uuid-class\";\nimport { concatBufferSources } from 'typed-array-utils';\n\ntype Bytes =\n  | Int8Array \n  | Int16Array \n  | Int32Array \n  | Uint8Array \n  | Uint16Array \n  | Uint32Array \n  | Uint8ClampedArray \n  | Float32Array \n  | Float64Array \n  | DataView \n  | ArrayBuffer;\n\nconst BASE_DIFFICULTY = 8;\nconst BASE_CLAPS = 15;\n\nconst sha256 = (data: Bytes) => crypto.subtle.digest('SHA-256', data);\nconst digest = (message: string) => sha256(new TextEncoder().encode(message));\n\nasync function makeKey({ url, id, claps, nonce }: {\n  url: URL | string,\n  id: UUID | string,\n  claps: number,\n  nonce: number,\n}) {\n  return concatBufferSources(\n    await digest(url.toString()),\n    new UUID(id.toString()),\n    new Uint32Array([claps]),\n    new Uint32Array([nonce]),\n  ).buffer;\n}\n\nfunction leadingZeros(ab: ArrayBuffer, n: number) {\n  const u8 = new Uint8Array(ab);\n  const nb = Math.ceil(n / 8);\n  for (let i = 0; i < nb; i++) {\n    const ni = Math.min(8, n - i * 8);\n    for (let j = 0; j < ni; j++) {\n      if (((u8[i] >> (7 - j)) & 0b00000001) !== 0) return false;\n    }\n  }\n  return true;\n}\n\nconst calcDifficulty = (claps: number) => BASE_DIFFICULTY + Math.round(Math.log2(BASE_CLAPS + claps));\n\nexport async function proofOfClap({ url, claps, id }: {\n  url: URL | string,\n  id: UUID | string,\n  claps: number,\n}) {\n  const difficulty = calcDifficulty(claps);\n\n  let nonce = 0;\n\n  const key = new Uint32Array(await makeKey({ url, id, claps, nonce }));\n  let hash = await sha256(key);\n\n  while (!leadingZeros(hash, difficulty)) {\n    nonce++;\n    key[key.length - 1] = nonce;\n    hash = await sha256(key);\n  }\n\n  return nonce;\n}\n\nexport async function checkProofOfClap({ url, claps, id, nonce }: {\n  url: URL | string,\n  claps: number,\n  id: UUID | string,\n  nonce: number,\n}) {\n  const difficulty = calcDifficulty(claps);\n  const hash = await sha256(await makeKey({ url, id, claps, nonce }));\n  return leadingZeros(hash, difficulty);\n}\n","import { UUID } from 'uuid-class';\nimport { proofOfClap } from '@getclaps/proof-of-clap';\n\nconst API = Reflect.get(window, 'GET_CLAPS_API') || \"https://worker.getclaps.app\";\n\ntype HrefIndex = { [href: string]: { claps: number } };\n\nfunction paramsURL(url: string, params?: Record<string, string> | null, base?: string | URL) {\n  const u = new URL(url, base);\n  for (const [k, v] of Object.entries(params || {})) u.searchParams.append(k, v);\n  return u.href;\n}\n\nconst fetchMap = new Map<string, Promise<HrefIndex>>();\nlet referrerSent = false;\n\nexport const getClaps = async (href: string, parentHref: string, referrer: string): Promise<{ claps: number }> => {\n  let indexPromise = fetchMap.get(parentHref);\n  if (!indexPromise) {\n    fetchMap.set(parentHref, indexPromise = fetchMap.get(parentHref) || (async () => {\n      const url = paramsURL('/views', {\n        href: parentHref,\n        ...referrer && !referrerSent ? { referrer } : {}\n      }, API);\n\n      const response = await fetch(url, {\n        method: 'POST',\n        body: null,\n        mode: 'cors',\n        credentials: 'include',\n        headers: { 'accept': 'application/json' },\n      });\n\n      referrerSent = true;\n\n      if (response.ok && response.headers.get('Content-Type')?.includes('json')) {\n        return await response.json();\n      } else if (response.status === 404) {\n        return {};\n      } else if (response.status === 402) {\n        throw response;\n      } else {\n        fetchMap.delete(parentHref);\n        throw Error();\n      }\n    })());\n  }\n\n  const index: HrefIndex = await indexPromise;\n  return index[href] || { claps: 0 }\n}\n\nexport const mine = async (claps: number, href: string) => {\n  const url = new URL(href);\n  url.search = '';\n\n  const id = new UUID();\n  const nonce = await proofOfClap({ url, claps, id });\n\n  return { href: url.href, id, nonce };\n}\n\nexport const updateClapsApi = async (claps: number, href: string, parentHref: string, id: UUID, nonce: number): Promise<{ claps: number }> => {\n  const url = paramsURL('/claps', { href }, API)\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify({ claps, id, nonce }),\n    mode: 'cors',\n    credentials: 'include',\n    headers: { \n      'accept': 'application/json', \n      'content-type': 'application/json;charset=UTF-8',\n    },\n  });\n  if (response.ok && response.headers.get('Content-Type')?.includes('json')) {\n    fetchMap.delete(parentHref); // TODO: update in place instead?\n    return response.clone().json();\n  } else {\n    throw Error();\n  }\n};\n\nexport const cleanUp = (parentHref: string) => {\n  fetchMap.delete(parentHref);\n}\n","import { LitElement } from \"lit-element\";\n\nconst refCountMap = new Map<any, number>();\n\nexport class ConnectedCountElement extends LitElement  {\n  get connectedCountKey(): string | undefined { return undefined };\n\n  protected allDisconnectedCallback() {};\n  #ref!: any;\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.#ref = this.connectedCountKey ?? this;\n\n    refCountMap.set(\n      this.#ref, \n      1 + (refCountMap.get(this.#ref) || 0),\n    );\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    const refCount = (refCountMap?.get(this.#ref) || 0) - 1;\n    if (refCount > 0) {\n      refCountMap.set(this.#ref, refCount);\n    } else {\n      refCountMap.delete(this.#ref);\n      this.allDisconnectedCallback?.();\n    }\n  }\n}\n","import { StorageArea } from 'kv-storage-polyfill';\nimport { html, svg, LitElement, customElement, query, property } from \"lit-element\";\nimport { classMap } from 'lit-html/directives/class-map';\nimport { styleMap } from 'lit-html/directives/style-map';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html.js';\n\nimport { styles } from './styles';\n\nimport { getClaps, updateClapsApi, mine, cleanUp } from './api';\nimport { ConnectedCountElement } from \"./connected-count\";\n\nenum TextPlacement {\n  Top = \"top\",\n  Bottom = \"bottom\",\n}\n\nenum ErrorTypes {\n  PaymentRequired = 1,\n  CryptoRequired,\n  Generic,\n}\n\ninterface ClapData {\n  btnId: number,\n  href: string;\n  claps: number;\n  totalClaps: number;\n}\n\nconst WEBSITE = \"https://getclaps.app\";\nconst TIMER = 3000;\nconst ANIM_DELAY = 250;\n\nconst storage = new StorageArea('clap-button');\n\nconst arrayOfSize = (size: number) => [...new Array(size).keys()]\n\nconst formatClaps = (claps: number | null) => claps != null ? claps.toLocaleString('en') : '';\n\n// toggle a CSS class to re-trigger animations\nconst toggleClass = (element: HTMLElement, ...cls: string[]) => {\n  element.classList.remove(...cls);\n\n  // Force layout reflow\n  void element.offsetWidth;\n\n  element.classList.add(...cls);\n};\n\nconst debounce = (fn: (...args: any[]) => void, delay: number) => {\n  let timer: number;\n  return function (...args: any[]) {\n    clearTimeout(timer);\n    timer = setTimeout(() => fn(...args), delay);\n  };\n};\n\nconst getParentHref = (href: string) => {\n  const parentURL = new URL(href);\n  parentURL.hash = '';\n  parentURL.search = '';\n  return parentURL.href;\n}\n\n@customElement('clap-config')\nexport class ClapConfig extends LitElement { }\n\n@customElement('clap-text')\nexport class ClapText extends LitElement {\n  @property({ type: Number, reflect: true }) at: number = 1;\n}\n\n@customElement('clap-button')\nexport class ClapButton extends ConnectedCountElement {\n  static styles = styles;\n\n  private static intersectionObserver = new IntersectionObserver(entries => {\n    entries.forEach(x => (x.target as ClapButton).isIntersecting = x.isIntersecting);\n  });\n\n  #configMutationObserver!: MutationObserver;\n\n  @query('.style-root') private styleRoot!: HTMLElement;\n\n  @property({ type: String, reflect: true, attribute: 'text-placement' }) textPlacement: TextPlacement = TextPlacement.Bottom;\n  @property({ type: Boolean, reflect: true }) noWave: boolean = false;\n  @property({ type: Boolean, reflect: true }) messages: boolean = false;\n  @property({ type: String, reflect: false }) href!: string;\n  @property({ type: String, reflect: false }) url!: string;\n\n  @property() private uiClaps: number = 0;\n  @property() private bufferedClaps: number = 0;\n  @property() private loading: boolean = false;\n  @property() private clapped: boolean = false;\n  @property() private clicking: boolean = false;\n  @property() private ready: boolean = false;\n  @property() private error: ErrorTypes | null = null;\n  @property() private isIntersecting: boolean = false;\n\n  #canonicalEl!: HTMLLinkElement | null;\n  get canonical() {\n    const href = this.href || this.url || '';\n    const canonicalEl = this.#canonicalEl = (this.#canonicalEl || this.ownerDocument.head.querySelector<HTMLLinkElement>('link[rel=canonical]'));\n    const location = canonicalEl != null ? new URL(canonicalEl.href) : this.ownerDocument.location;\n    return new URL(href, location.href).href;\n  }\n\n  get parentHref() {\n    return getParentHref(this.canonical);\n  }\n\n  get referrer() {\n    const usp = new URLSearchParams(this.ownerDocument.location.search);\n    return usp.get('referrer') || usp.get('referer') || this.ownerDocument.referrer;\n  }\n\n  #messages!: Map<number, string>;\n  #channel = 'BroadcastChannel' in window ? new BroadcastChannel('clap-button') : null;\n  #btnId = Math.trunc(Math.random() * 1_000_000_000); // pseudo-random ok\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if ('crypto' in window && 'subtle' in window.crypto && 'digest' in window.crypto.subtle) { /* ok */ } else {\n      this.error = ErrorTypes.CryptoRequired;\n      return;\n    }\n\n    this.#channel?.addEventListener('message', this.#clappedCallback);\n\n    ClapButton.intersectionObserver.observe(this);\n\n    // const themeColorEl = document.head.querySelector('meta[name=theme-color]') as HTMLMetaElement | null;\n    // if (themeColorEl) {\n    //   this.el.style.setProperty('--theme-color', themeColorEl.content);\n    // }\n\n    const clapConfig = this.ownerDocument.querySelector('clap-config');\n    this.#configMutationObserver = new MutationObserver(() => {\n      const clapTexts: ClapText[] = Array.from(clapConfig?.querySelectorAll('clap-text') ?? []);\n      this.#messages = new Map(clapTexts?.map((x => [x.at, x.innerHTML] as const)).sort(([a], [b]) => b - a));\n    });\n    if (clapConfig) {\n      this.#configMutationObserver.observe(clapConfig, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        characterData: true,\n      });\n    }\n\n    ;(async () => {\n      this.loading = true;\n      this.clapped = await storage.get(this.canonical) != null;\n\n      try {\n        const { claps } = await getClaps(this.canonical, this.parentHref, this.referrer);\n        this.loading = false;\n        this.ready = true;\n        this.uiClaps = claps;\n      } catch (err) {\n        this.loading = false;\n        this.ready = false;\n        this.error = err.status === 402 ? ErrorTypes.PaymentRequired : ErrorTypes.Generic;\n      }\n    })();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    ClapButton.intersectionObserver.unobserve(this);\n    this.#configMutationObserver.disconnect();\n    this.#channel?.removeEventListener('message', this.#clappedCallback);\n  }\n\n  // Ref-counts all elements with the same `parentHref` and invokes `allDisconnectedCallback` when the count reaches 0.\n  get connectedCountKey() { return this.parentHref }\n  protected allDisconnectedCallback() {\n    cleanUp(this.parentHref);\n  }\n\n  render() {\n    const hand = svg`\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\" id=\"hand-svg\">\n        <g class=\"flat\">\n          <path d=\"M57.0443547 6.86206897C57.6058817 6.46227795 57.7389459 5.67962382 57.3416215 5.11431557 56.9442971 4.54900731 56.1672933 4.41483804 55.6055588 4.81504702L52.4950525 7.030721C51.9335255 7.43051202 51.8004613 8.21316614 52.1977857 8.7784744 52.4404567 9.12371996 52.8251182 9.30825496 53.2153846 9.30825496 53.4640757 9.30825496 53.7152578 9.23343783 53.9338485 9.07753396L57.0443547 6.86206897zM48.8035059 6.1414838C48.94778 6.19623824 49.0959982 6.22215256 49.2415177 6.22215256 49.7455426 6.22215256 50.2198824 5.91201672 50.4075424 5.40898642L51.7485642 1.81818182C51.9906124 1.17011494 51.664906.447021944 51.0209664.203343783 50.3772345-.0405433647 49.6587706.287774295 49.4167224.93584117L48.0757006 4.52664577C47.83386 5.17471264 48.1595664 5.89780564 48.8035059 6.1414838zM58.5931726 11.6219436C58.5846615 11.6219436 58.5761504 11.6219436 58.5674317 11.6219436L54.7579749 11.6541275C54.0702341 11.6681296 53.5240687 12.1985371 53.5379772 12.8909091 53.551678 13.5745037 54.1065621 14.1297806 54.7828855 14.1297806 54.7913966 14.1297806 54.7999077 14.1297806 54.8086265 14.1297806L58.6180833 14.0643678C59.305824 14.0501567 59.8519894 13.4934169 59.838081 12.8010449 59.8243801 12.1174504 59.269496 11.6219436 58.5931726 11.6219436z\"/>\n          <path d=\"M37.1910045 6.68944619C37.7313574 6.14566353 38.4431784 5.8737722 39.155207 5.8737722 39.967916 5.8737722 40.7808327 6.22800418 41.3380002 6.93667712 42.2214969 8.06039707 42.0666359 9.69111808 41.0600392 10.7042842L39.777765 11.9949843C39.5801407 12.1276907 39.3877061 12.2695925 39.2075193 12.430303 39.0619998 11.5985371 38.7167801 10.7954023 38.1668781 10.0961338 37.4907623 9.23636364 36.588375 8.62424242 35.5772114 8.31410658L37.1910045 6.68944619zM28.5289586 3.66394984C29.0691039 3.12016719 29.7811325 2.84827586 30.4931611 2.84827586 31.3060777 2.84848485 32.1187868 3.20271682 32.6759543 3.91138976 33.559451 5.03510972 33.40459 6.66562173 32.3979933 7.67878788L17.6760235 22.3467085 17.6276554 20.6499478C17.6149925 19.014629 16.8595779 17.554441 15.6854573 16.5945664L28.5289586 3.66394984zM.624996757 36.9889537C.491717597 36.554099.508245877 35.7327064.906400646 35.2666667L3.45579518 32.2829676C3.45662553 32.2819923 4.33763118 25.8376176 6.09881213 12.9498433 6.09881213 11.4271682 7.33624726 10.1814002 8.84873717 10.1814002 10.3612271 10.1814002 11.5988698 11.4271682 11.5988698 12.9498433L11.6704878 15.4649948C9.18191673 15.8089864 7.24428555 17.9170324 7.14921001 20.492581L4.62804751 38.9475444 3.8946373 39.8060606C3.04504924 39.4926018 2.3776139 39.1458968 1.89233128 38.7659456 1.16440735 38.1960189.758275917 37.4238085.624996757 36.9889537z\"/>\n          <path d=\"M49.6070811,36.8942529 L42.4182909,44.1316614 C36.2784454,50.3128527 29.8604313,55.2743992 24.2225349,56.5113898 C24.0512744,56.5492163 23.8901857,56.6217346 23.7511014,56.7293626 L20.5013032,59.2417973 C20.2908084,59.4045977 20.1673015,59.6181154 19.5026647,59.6181154 C18.8380279,59.6181154 13.0160695,55.8303982 10.3595306,53.2846814 C7.96626306,50.9912532 3.77432047,43.9549368 4.44453927,43.0079415 L6.99372621,40.0244514 C6.99469496,40.0233368 7.87570061,33.578962 9.63674317,20.6913271 C9.63674317,19.168652 10.8743859,17.922675 12.3868758,17.922675 C13.8993657,17.922675 15.1368008,19.168652 15.1368008,20.6913271 L15.2667512,25.2522466 C15.2883404,26.0100313 15.907577,26.5034483 16.5519317,26.5034483 C16.8662207,26.5034483 17.1867374,26.3857889 17.4464306,26.1245559 L32.0670972,11.4054336 C32.6074501,10.861442 33.3190635,10.5897597 34.0312997,10.5897597 C34.8440088,10.5897597 35.6569254,10.9439916 36.214093,11.6526646 C37.0975897,12.7763845 36.942521,14.4071055 35.9359243,15.4202717 L25.8641449,25.5598746 C25.3412294,26.0865204 25.3412294,26.9398119 25.8641449,27.4660397 C26.1288202,27.7324974 26.4757006,27.8658307 26.822581,27.8658307 C27.1694614,27.8658307 27.5165494,27.7324974 27.7810172,27.4660397 L40.7291431,14.43093 C41.2692884,13.8869383 41.9811094,13.615256 42.6933456,13.615256 C43.5060547,13.615465 44.3189713,13.969697 44.8761389,14.6783699 C45.7596356,15.8018809 45.6045669,17.4326019 44.5979702,18.445768 L31.7106677,31.4198537 C31.1806943,31.953605 31.1806943,32.8183908 31.7106677,33.3521421 C31.9718141,33.615047 32.31392,33.7464995 32.656441,33.7464995 C32.9985469,33.7464995 33.3408603,33.615047 33.6020067,33.3521421 L43.7346096,23.1515152 C44.2749625,22.6075235 44.9867835,22.3358412 45.6988121,22.3358412 C46.5115212,22.3358412 47.3244378,22.6900731 47.8816054,23.3989551 C48.7651021,24.522466 48.6100334,26.153187 47.6034367,27.1663532 L37.5667397,37.2708464 C37.0245185,37.8165099 37.0245185,38.7017764 37.5667397,39.2474399 C37.8334909,39.5161964 38.161896,39.6422153 38.4900934,39.6422153 C38.8184984,39.6422153 39.1469035,39.5161964 39.3972552,39.2639498 L45.6195133,32.999791 C46.1802099,32.4353187 46.93085,32.1368861 47.678999,32.1368861 C48.2741552,32.1368861 48.8676508,32.3258098 49.361919,32.7197492 C50.682182,33.7717868 50.7639719,35.7297806 49.6070811,36.8942529 Z\"/>\n        </g>\n        <g class=\"outline\">\n          <path d=\"M57.1428763 6.63333333C57.6856856 6.24686869 57.8143144 5.49030303 57.4302341 4.94383838 57.0461538 4.39737374 56.2950502 4.26767677 55.7520401 4.65454545L52.7452174 6.79636364C52.202408 7.18282828 52.0737793 7.93939394 52.4578595 8.48585859 52.6924415 8.81959596 53.0642809 8.9979798 53.4415385 8.9979798 53.6819398 8.9979798 53.9247492 8.92565657 54.1360535 8.77494949L57.1428763 6.63333333zM49.1767224 5.93676768C49.3161873 5.98969697 49.4594649 6.01474747 49.6001338 6.01474747 50.0873579 6.01474747 50.5458863 5.71494949 50.727291 5.22868687L52.023612 1.75757576C52.257592 1.13111111 51.9427425.432121212 51.3202676.196565657 50.6979933-.0391919192 50.0034783.278181818 49.7694983.904646465L48.4731773 4.37575758C48.239398 5.00222222 48.5542475 5.70121212 49.1767224 5.93676768zM58.6400669 11.2345455C58.6318395 11.2345455 58.623612 11.2345455 58.6151839 11.2345455L54.932709 11.2656566C54.267893 11.2791919 53.7399331 11.7919192 53.7533779 12.4612121 53.7666221 13.1220202 54.30301 13.6587879 54.9567893 13.6587879 54.9650167 13.6587879 54.9732441 13.6587879 54.9816722 13.6587879L58.6641472 13.5955556C59.3289632 13.5818182 59.8569231 13.0436364 59.8434783 12.3743434 59.8302341 11.7135354 59.2938462 11.2345455 58.6400669 11.2345455zM51.2107023 29.7280808C50.5940468 29.2365657 49.8640134 28.9020202 49.0922408 28.7448485 49.1432107 28.6519192 49.1907692 28.5573737 49.2357191 28.4614141L49.7189298 27.9749495C51.5799331 26.1012121 51.7753846 23.1519192 50.1732441 21.1141414 49.4169231 20.1523232 48.3670234 19.5131313 47.2009365 19.2745455 47.284214 19.120202 47.3580602 18.9624242 47.4250836 18.8022222 48.6925084 16.9539394 48.6718395 14.469899 47.2681605 12.6844444 46.5116388 11.7220202 45.4613378 11.0808081 44.2946488 10.8426263 45.2578595 9.05959596 45.1348495 6.83737374 43.8481605 5.20121212 42.8753177 3.96383838 41.4182609 3.25393939 39.8502341 3.25393939 38.5946488 3.25393939 37.4101003 3.70565657 36.480602 4.53272727 36.3399331 3.72888889 36.0064214 2.95252525 35.4748495 2.27636364 34.501806 1.0389899 33.0447492.329292929 31.4767224.329090909 30.1141806.329090909 28.8351171.861414141 27.8753177 1.82767677L15.6666221 14.1185859 15.6200669 12.4781818C15.5985953 9.68424242 13.3340468 7.41777778 10.5537793 7.41777778 7.8238796 7.41777778 5.59143813 9.60262626 5.49110368 12.3264646L3.05377926 30.1660606 1.05050167 32.510303C-.150100334 33.9157576.751318148 36.4103164 1.05050167 37.002855 1.3496852 37.5953936 1.66593319 37.9666982 2.51271962 38.8651283 2.8050341 39.1752704 3.3712736 39.6680391 4.21143813 40.3434343 3.2935786 41.7335354 4.72327715 47.298456 9.51045561 52.4226263 15.4436869 58.7735254 20.1888963 59.9262626 21.1316388 59.9262626 21.9056187 59.9262626 22.6703679 59.6646465 23.2846154 59.189899L26.2031438 56.9337374C29.0107023 56.2660606 32.1060201 54.7492929 35.4086288 52.4226263 38.2924415 50.3907071 41.4210702 47.6832323 44.7070234 44.3749495L51.656388 37.3787879C52.681204 36.3470707 53.220602 34.9165657 53.1363211 33.4541414 53.0520401 31.9941414 52.350301 30.6361616 51.2107023 29.7280808zM37.9513043 6.46646465C38.4736455 5.94080808 39.1617391 5.6779798 39.8500334 5.6779798 40.6356522 5.6779798 41.4214716 6.02040404 41.9600669 6.70545455 42.8141137 7.79171717 42.6644147 9.36808081 41.6913712 10.3474747L40.4518395 11.5951515C40.2608027 11.7234343 40.0747826 11.8606061 39.900602 12.0159596 39.7599331 11.2119192 39.4262207 10.4355556 38.8946488 9.75959596 38.2410702 8.92848485 37.3687625 8.33676768 36.3913043 8.0369697L37.9513043 6.46646465zM29.5779933 3.54181818C30.1001338 3.01616162 30.7884281 2.75333333 31.4767224 2.75333333 32.2625418 2.75353535 33.0481605 3.0959596 33.5867559 3.7810101 34.4408027 4.86727273 34.2911037 6.44343434 33.3180602 7.42282828L19.0868227 21.6018182 19.0400669 19.9616162C19.0278261 18.3808081 18.297592 16.9692929 17.1626087 16.0414141L29.5779933 3.54181818zM2.60416353 35.7559886C2.47532701 35.335629 2.49130435 34.5416162 2.87618729 34.0911111L5.34060201 31.2068687C5.34140468 31.2059259 6.19304348 24.9763636 7.89551839 12.5181818 7.89551839 11.0462626 9.09170569 9.8420202 10.5537793 9.8420202 12.0158528 9.8420202 13.2122408 11.0462626 13.2122408 12.5181818L13.2814716 14.9494949C10.8758528 15.2820202 9.00280936 17.319798 8.91090301 19.8094949L6.47377926 37.6492929 5.76481605 38.4791919C4.9435476 38.1761817 4.2983601 37.8410335 3.82925357 37.4737474 3.12559377 36.9228183 2.73300005 36.1763482 2.60416353 35.7559886zM49.9535117 35.6644444L43.0043478 42.6606061C37.0691639 48.6357576 30.8650836 53.4319192 25.4151171 54.6276768 25.2495652 54.6642424 25.0938462 54.7343434 24.959398 54.8383838L21.8179264 57.2670707C21.6144482 57.4244444 21.4950582 57.6308449 20.8525759 57.6308449 20.2100936 57.6308449 14.5822005 53.9693849 12.0142129 51.5085254 9.70072096 49.2915447 5.64850979 42.4897722 6.29638796 41.5743434L8.76060201 38.690303C8.76153846 38.6892256 9.61317726 32.4596633 11.3155184 20.0016162 11.3155184 18.529697 12.5119064 17.3252525 13.9739799 17.3252525 15.4360535 17.3252525 16.6322408 18.529697 16.6322408 20.0016162L16.7578595 24.4105051C16.7787291 25.1430303 17.3773244 25.62 18.0002007 25.62 18.3040134 25.62 18.6138462 25.5062626 18.8648829 25.2537374L32.998194 11.0252525C33.5205351 10.4993939 34.2084281 10.2367677 34.8969231 10.2367677 35.6825418 10.2367677 36.4683612 10.5791919 37.0069565 11.2642424 37.8610033 12.3505051 37.7111037 13.9268687 36.7380602 14.9062626L27.0020067 24.7078788C26.4965217 25.2169697 26.4965217 26.0418182 27.0020067 26.5505051 27.2578595 26.8080808 27.5931773 26.9369697 27.928495 26.9369697 28.2638127 26.9369697 28.5993311 26.8080808 28.8549833 26.5505051L41.371505 13.949899C41.8936455 13.4240404 42.5817391 13.1614141 43.2702341 13.1614141 44.0558528 13.1616162 44.8416722 13.5040404 45.3802676 14.1890909 46.2343144 15.2751515 46.0844147 16.8515152 45.1113712 17.8309091L32.6536455 30.3725253C32.1413378 30.8884848 32.1413378 31.7244444 32.6536455 32.240404 32.906087 32.4945455 33.2367893 32.6216162 33.567893 32.6216162 33.8985953 32.6216162 34.2294983 32.4945455 34.4819398 32.240404L44.2767893 22.379798C44.7991304 21.8539394 45.4872241 21.5913131 46.1755184 21.5913131 46.9611371 21.5913131 47.7469565 21.9337374 48.2855518 22.6189899 49.1395987 23.7050505 48.989699 25.2814141 48.0166555 26.2608081L38.3145151 36.0284848C37.7903679 36.5559596 37.7903679 37.4117172 38.3145151 37.9391919 38.5723746 38.1989899 38.8898328 38.3208081 39.2070903 38.3208081 39.5245485 38.3208081 39.8420067 38.1989899 40.0840134 37.9551515L46.0988629 31.899798C46.6408696 31.3541414 47.3664883 31.0656566 48.089699 31.0656566 48.6650167 31.0656566 49.2387291 31.2482828 49.7165217 31.6290909 50.9927759 32.6460606 51.0718395 34.5387879 49.9535117 35.6644444z\"/>\n        </g>\n      </svg>`;\n\n    const circle = svg`\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" id=\"countdown-svg\">\n      <g class=\"countdown\">\n        <circle cx=\"50\" cy=\"50\" r=\"49\"/>\n      </g>\n    </svg>\n    `;\n\n    const x = this.bufferedClaps;\n    const n = 5 + x;\n    const BASE_MAX_DELAY = 300;\n    const maxDelay = BASE_MAX_DELAY * (1 - Math.E ** (-x / 15));\n    const sparkle = svg`\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-10 -10 20 20\">\n        <g class=\"sparkle\">\n          ${repeat(arrayOfSize(n), i => i, i => svg`<g style=${styleMap({ transform: `rotate(${Math.floor(360 / n * i)}deg) translateX(10px)` })}>\n            <circle style=${styleMap({ animationDelay: `${Math.floor(Math.random() * maxDelay)}ms` })} cx=\"0\" cy=\"0\" r=\"1\"/>\n          </g>`)}\n        </g>\n      </svg>`;\n\n    return html`\n      <div \n        class=${classMap({\n      'style-root': true,\n      'loading': this.loading,\n      'clapped': this.clapped,\n      'no-shockwave': this.noWave || !this.ready,\n      'no-animation': !this.isIntersecting,\n    })}\n        style=${styleMap({\n      ...this.error != null ? { '--clap-button-color': 'indianred' } : {}\n    })}\n      >\n        <div class=\"shockwave\"></div>\n        <div class=${classMap({\n      'count-container': true,\n      'container-top': this.textPlacement === TextPlacement.Top,\n      'container-bottom': this.textPlacement === TextPlacement.Bottom,\n    })}>\n          <div class=\"count\">\n            ${this.clicking ? '+' : ''}${this.ready ? formatClaps(this.uiClaps) : ''}\n            ${this.error === ErrorTypes.PaymentRequired ? html`<a class=\"error\" href=\"${WEBSITE}\">Payment required</a>` : null}\n            ${this.error === ErrorTypes.CryptoRequired ? html`<span class=\"error\">Crypto required</span>` : null}\n            ${this.error === ErrorTypes.Generic ? html`<span class=\"error\">Error</span>` : null}\n          </div>\n        </div>\n        <div class=${classMap({\n      'count-container': true,\n      'container-top': this.textPlacement === TextPlacement.Bottom,\n      'container-bottom': this.textPlacement === TextPlacement.Top,\n    })}>\n          ${this.messages ? html`<div style=\"font-size:smaller\">\n            ${this.clicking ? unsafeHTML([...this.#messages].find(([x]) => this.uiClaps >= x)?.[1] ?? '') : ''}\n          </div>` : null}\n        </div>\n        ${hand}\n        ${sparkle}\n        ${circle}\n        <button\n          ?disabled=${this.loading || !this.ready}\n          @mousedown=${this.loading || !this.ready ? null : this.#clickCallback}\n          @touchstart=${this.loading || !this.ready ? null : this.#clickCallback}\n        ></button>\n      </div>\n      `;\n  }\n\n  #clickCallback = (event: MouseEvent) => {\n    if (event.button !== 0) {\n      return;\n    }\n\n    event.preventDefault();\n\n    this.clapped = true;\n    this.clicking = true;\n    this.bufferedClaps++;\n\n    toggleClass(this.styleRoot, \"clap\", \"ticking\");\n\n    this.#updateClaps();\n\n    this.uiClaps = this.bufferedClaps;\n  }\n\n  #updateClaps = debounce(async () => {\n    const claps = this.bufferedClaps;\n    this.bufferedClaps = 0;\n    this.loading = true;\n    const { href, id, nonce } = await mine(claps, this.canonical);\n    const { claps: totalClaps } = await updateClapsApi(claps, href, this.parentHref, id, nonce);\n\n    this.loading = false;\n    this.clicking = false;\n    this.styleRoot.classList.remove('ticking');\n    toggleClass(this.styleRoot, \"clap\");\n\n    const data = { btnId: this.#btnId, claps, totalClaps, href };\n    if (this.#channel) {\n      this.#channel.postMessage(data);\n    } else {\n      this.#clappedCallback({ data } as MessageEvent)\n    }\n\n    // MAYBE: Replace with animation finish event!?\n    setTimeout(() => { this.uiClaps = totalClaps }, ANIM_DELAY);\n\n    const { claps: storageClaps, ...storageData } = await storage.get(href) ?? { claps: 0 };\n    await storage.set(href, { ...storageData, claps: storageClaps + claps });\n  }, TIMER);\n\n  #clappedCallback = ({ data: { href, claps, btnId } }: MessageEvent<ClapData>) => {\n    if (btnId !== this.#btnId && [href, getParentHref(href)].includes(this.canonical)) {\n      this.clapped = true;\n      this.uiClaps += claps;\n      toggleClass(this.styleRoot, \"clap\");\n    }\n  }\n}\n"],"names":["global","channels","BroadcastChannel","channel","$this","String","id","push","_name","_id","_closed","_mc","MessageChannel","port1","start","port2","addEventListener","e","storageArea","localStorage","newValue","key","substring","length","data","JSON","parse","postMessage","prototype","name","message","Error","value","stringify","Date","now","Math","random","setItem","setTimeout","removeItem","forEach","bc","close","index","indexOf","splice","onmessage","apply","arguments","removeEventListener","dispatchEvent","self","Pt","t","then","n","r","s","o","C","v","i","bind","_n","ne","WeakMap","Symbol","set","get","ze","Promise","onsuccess","result","onerror","error","At","openCursor","Tt","oncomplete","onabort","Fe","Array","isArray","ArrayBuffer","isView","kt","Et","Lt","IDBKeyRange","lowerBound","Infinity","Nt","_e","Ce","Ut","Pe","Mt","u","a","done","resolve","l","d","c","b","p","f","h","m","y","x","S","ue","xe","qe","Q","$","de","H","bt","reject","We","return","next","TypeError","asyncIterator","re","R","Ye","indexedDB","open","objectStoreNames","q","Ke","transaction","objectStore","autoIncrement","keyPath","indexNames","onclose","onversionchange","onupgradeneeded","createObjectStore","k","backingStore","database","store","version","delete","put","clear","deleteDatabase","keys","values","entries","lr","Ge","window","customElements","polyfillWrapFlushCallback","pe","undefined","nextSibling","insertBefore","N","removeChild","L","concat","slice","Je","jt","RegExp","se","oe","constructor","parts","element","document","createTreeWalker","content","strings","nextNode","currentNode","pop","nodeType","hasAttributes","attributes","Rt","Ae","exec","toLowerCase","getAttribute","removeAttribute","split","type","tagName","parentNode","P","createTextNode","previousSibling","he","createComment","Xe","Ze","fe","has","Cn","It","appendChild","Vt","U","z","A","Te","F","__parts","template","processor","options","update","setValue","commit","_clone","cloneNode","importNode","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","Ot","trustedTypes","createPolicy","createHTML","Pn","M","getHTML","lastIndexOf","substr","getTemplateElement","createElement","innerHTML","me","firstChild","ie","ke","iterator","ye","dirty","_createPart","I","_getValue","setAttribute","committer","T","__pendingValue","appendInto","startNode","endNode","appendIntoPart","__insert","insertAfterPart","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","templateFactory","Le","Ee","single","W","Dt","capture","Ne","eventName","eventContext","__boundHandleEvent","handleEvent","once","passive","__options","An","call","Qe","Y","stringsArray","keyString","Map","join","V","et","Object","assign","tt","Ue","litHtmlVersions","O","_len","_key","K","_len2","_key2","Bt","Me","ShadyCSS","prepareTemplateDom","console","warn","Tn","kn","Ln","Set","from","querySelectorAll","add","$t","En","prepareTemplateStyles","textContent","querySelector","nativeShadow","Ht","scopeName","host","createDocumentFragment","styleElement","qt","JSCompiler_renameProperty","nt","toAttribute","Boolean","fromAttribute","Number","zt","rt","attribute","converter","reflect","hasChanged","st","ot","it","at","ct","je","HTMLElement","initialize","observedAttributes","finalize","_classProperties","_attributeNameForProperty","_attributeToPropertyMap","_ensureClassProperties","hasOwnProperty","getPrototypeOf","createProperty","noAccessor","getPropertyDescriptor","defineProperty","requestUpdateInternal","configurable","enumerable","getPropertyOptions","properties","getOwnPropertyNames","getOwnPropertySymbols","_valueHasChanged","_propertyValueFromAttribute","_propertyValueToAttribute","_updateState","_updatePromise","_enableUpdatingResolver","_changedProperties","_saveInstanceProperties","_instanceProperties","_applyInstanceProperties","connectedCallback","enableUpdating","disconnectedCallback","attributeChangedCallback","_attributeToProperty","_propertyToAttribute","_reflectingProperties","_hasRequestedUpdate","_enqueueUpdate","requestUpdate","updateComplete","_this","_asyncToGenerator","performUpdate","hasUpdated","shouldUpdate","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","Nn","define","Un","kind","elements","finisher","Re","Mn","descriptor","placement","initializer","jn","_","Ft","renderRoot","Rn","In","Wt","Element","is","msMatchesSelector","webkitMatchesSelector","Ie","ShadowRoot","Document","CSSStyleSheet","lt","Ve","cssText","styleSheet","_styleSheet","replaceSync","toString","Yt","Vn","Kt","_len3","_key3","reduce","litElementVersions","Gt","D","getStyles","styles","_getUniqueStyles","reduceRight","unshift","_styles","map","cssRules","createRenderRoot","adoptStyles","attachShadow","mode","ScopingShim","prepareAdoptedCssText","localName","adoptedStyleSheets","_needsShimAdoptedStyleSheets","render","finalized","Jt","classes","changed","remove","Xt","Oe","classList","Zt","De","style","removeProperty","setProperty","Qt","G","ut","dt","en","tn","nn","rn","sn","on","fragment","an","_templateObject","_taggedTemplateLiteral","pt","Uint8Array","buffer","byteOffset","byteLength","On","Dn","padStart","Bn","parseInt","cn","match","ln","un","_len4","_key4","Be","dn","crypto","getRandomValues","$n","replace","Hn","unescape","encodeURIComponent","TextEncoder","encode","qn","_x2","_x3","_qn","E","subtle","digest","v4","v5","SharedArrayBuffer","uuid","toJSON","species","zn","for","Fn","Deno","symbols","customInspect","Wn","Yn","Kn","_len5","_key5","pn","_len6","_key6","Gn","Jn","ht","Xn","Zn","_x4","_Zn","_ref","url","claps","nonce","Uint32Array","Qn","ceil","min","er","round","log2","hn","_x5","_hn","_ref2","fn","Reflect","mn","URL","searchParams","append","href","ae","yn","gn","_ref3","ee","referrer","fetch","method","body","credentials","headers","accept","ok","includes","json","status","_x6","_x7","_x8","bn","_ref5","search","_x9","_x10","wn","_ref6","clone","_x11","_x12","_x13","_x14","_x15","vn","J","j","ft","connectedCountKey","allDisconnectedCallback","te","g","X","Top","Bottom","B","PaymentRequired","CryptoRequired","Generic","tr","nr","rr","mt","sr","or","toLocaleString","yt","_len7","_key7","offsetWidth","ir","_len8","_key8","clearTimeout","xn","hash","gt","$e","ce","ge","be","Z","we","ve","He","le","w","_this2","this","textPlacement","noWave","messages","uiClaps","bufferedClaps","loading","clapped","clicking","ready","isIntersecting","trunc","button","preventDefault","styleRoot","canonical","parentHref","btnId","totalClaps","_t","_ref8","ownerDocument","head","location","URLSearchParams","_this3","intersectionObserver","observe","MutationObserver","sort","_ref9","_ref10","subtree","childList","characterData","unobserve","disconnect","_templateObject2","_templateObject3","_templateObject4","_templateObject5","transform","floor","animationDelay","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","find","_ref12","IntersectionObserver","target"],"sourceRoot":""}